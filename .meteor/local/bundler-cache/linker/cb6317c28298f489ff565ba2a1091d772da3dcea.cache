[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nEditableText = Package['babrahams:editable-text'].EditableText;\nsanitizeHtml = Package['babrahams:editable-text'].sanitizeHtml;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"char-list.html\":[\"./template.char-list.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/char-list.html                                                                                    //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.exports = require(\"./template.char-list.js\");                                                            // 1\n                                                                                                                // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.char-list.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/template.char-list.js                                                                             //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n                                                                                                                // 1\nTemplate.__checkName(\"main\");                                                                                   // 2\nTemplate[\"main\"] = new Template(\"Template.main\", (function() {                                                  // 3\n  var view = this;                                                                                              // 4\n  return [ HTML.Raw('<header class=\"container\">\\n      <h1>Brimstone</h1>\\n\\n      <form class=\"form-inline\">\\n      <div class=\"form-group\">\\n        <input class=\"form-control\" id=\"name\" type=\"text\" name=\"name\" placeholder=\"Add a new character\">\\n        <select class=\"form-control\" id=\"type\" type=\"text\" name=\"type\"> \\n         <option>Warrior</option>\\n        <option>Mage</option>  \\n        <option>Bowman</option>\\n        <option>Theif</option>\\n        <option>Darkness</option>\\n        </select>\\n        \\n        <button class=\"save btn-primary\">&plus;</button>\\n        </div>\\n      </form>\\n    </header>\\n  '), HTML.DIV({\n    \"class\": \"container\"                                                                                        // 6\n  }, \"\\n    \", HTML.OL(\"\\n      \", Blaze.Each(function() {                                                      // 7\n    return Spacebars.call(view.lookup(\"Characters\"));                                                           // 8\n  }, function() {                                                                                               // 9\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"charlist\")), \"\\n      \" ];                    // 10\n  }), \"\\n    \"), \"\\n  \") ];                                                                                     // 11\n}));                                                                                                            // 12\n                                                                                                                // 13\nTemplate.__checkName(\"charlist\");                                                                               // 14\nTemplate[\"charlist\"] = new Template(\"Template.charlist\", (function() {                                          // 15\n  var view = this;                                                                                              // 16\n  return HTML.LI({                                                                                              // 17\n    \"class\": \"character\"                                                                                        // 18\n  }, \"\\n\", HTML.SPAN({                                                                                          // 19\n    \"class\": \"text\"                                                                                             // 20\n  }, Blaze.View(\"lookup:name\", function() {                                                                     // 21\n    return Spacebars.mustache(view.lookup(\"name\"));                                                             // 22\n  })), \"\\n\", HTML.SPAN({                                                                                        // 23\n    \"class\": \"text\"                                                                                             // 24\n  }, Blaze.View(\"lookup:class\", function() {                                                                    // 25\n    return Spacebars.mustache(view.lookup(\"class\"));                                                            // 26\n  })), \"\\n\", HTML.SPAN({                                                                                        // 27\n    \"class\": \"text\"                                                                                             // 28\n  }, \"lvl: \", Blaze.View(\"lookup:lvl\", function() {                                                             // 29\n    return Spacebars.mustache(view.lookup(\"lvl\"));                                                              // 30\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n  '));          // 31\n}));                                                                                                            // 32\n                                                                                                                // 33\nTemplate.__checkName(\"charinfo\");                                                                               // 34\nTemplate[\"charinfo\"] = new Template(\"Template.charinfo\", (function() {                                          // 35\n  var view = this;                                                                                              // 36\n  return Spacebars.With(function() {                                                                            // 37\n    return Spacebars.call(view.lookup(\"activeCharacter\"));                                                      // 38\n  }, function() {                                                                                               // 39\n    return [ \"\\n\", HTML.BUTTON({                                                                                // 40\n      \"class\": \"back\",                                                                                          // 41\n      name: function() {                                                                                        // 42\n        return Spacebars.mustache(view.lookup(\"name\"));                                                         // 43\n      }                                                                                                         // 44\n    }, HTML.CharRef({                                                                                           // 45\n      html: \"&lt;\",                                                                                             // 46\n      str: \"<\"                                                                                                  // 47\n    })), \"\\n\", Spacebars.include(view.lookupTemplate(\"nav\")), \"\\n\", HTML.DIV({                                  // 48\n      \"class\": \"container\"                                                                                      // 49\n    }, \"\\n  \", HTML.DIV({                                                                                       // 50\n      \"class\": \"row\"                                                                                            // 51\n    }, \"\\n    \", HTML.DIV({                                                                                     // 52\n      \"class\": \"col-md-6\"                                                                                       // 53\n    }, \"\\n      \", HTML.DIV({                                                                                   // 54\n      id: \"name\"                                                                                                // 55\n    }, Blaze.View(\"lookup:name\", function() {                                                                   // 56\n      return Spacebars.mustache(view.lookup(\"name\"));                                                           // 57\n    })), \"\\n      \", HTML.DIV({                                                                                 // 58\n      id: \"class\"                                                                                               // 59\n    }, Blaze.View(\"lookup:class\", function() {                                                                  // 60\n      return Spacebars.mustache(view.lookup(\"class\"));                                                          // 61\n    })), \"\\n    \"), \"\\n    \", HTML.DIV({                                                                        // 62\n      \"class\": \"col-md-6\"                                                                                       // 63\n    }, \"\\n      \", HTML.DIV({                                                                                   // 64\n      id: \"key\"                                                                                                 // 65\n    }, Blaze.View(\"lookup:keys\", function() {                                                                   // 66\n      return Spacebars.mustache(view.lookup(\"keys\"));                                                           // 67\n    })), \"\\n      \", HTML.DIV({                                                                                 // 68\n      id: \"level\"                                                                                               // 69\n    }, Blaze.View(\"lookup:lvl\", function() {                                                                    // 70\n      return Spacebars.mustache(view.lookup(\"lvl\"));                                                            // 71\n    })), \"\\n    \"), \"\\n  \"), \"\\n  \\n    \", HTML.DIV({                                                           // 72\n      \"class\": \"row\"                                                                                            // 73\n    }, \"\\n    \", Spacebars.With(function() {                                                                    // 74\n      return Spacebars.call(view.lookup(\"stat\"));                                                               // 75\n    }, function() {                                                                                             // 76\n      return [ \"\\n    \", Blaze.Each(function() {                                                                // 77\n        return Spacebars.call(view.lookup(\"stat\"));                                                             // 78\n      }, function() {                                                                                           // 79\n        return [ \"\\n      \", HTML.DIV({                                                                         // 80\n          \"class\": \"col-md-4\"                                                                                   // 81\n        }, \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:..key\", function() {                                      // 82\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"key\"));                                    // 83\n        })), \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:..prop\", function() {                                   // 84\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"prop\"));                                   // 85\n        })), \"\\n      \"), \"\\n    \" ];                                                                           // 86\n      }), \"\\n    \" ];                                                                                           // 87\n    }), \"\\n    \"), \"\\n\\n  \", HTML.DIV({                                                                         // 88\n      \"class\": \"hero-extras\"                                                                                    // 89\n    }, \"\\n    \", HTML.DIV({                                                                                     // 90\n      \"class\": \"sub-container\"                                                                                  // 91\n    }, \"\\n      \", HTML.DIV({                                                                                   // 92\n      \"class\": \"gold\"                                                                                           // 93\n    }, \"\\n        \", HTML.DIV({                                                                                 // 94\n      \"class\": \"label\"                                                                                          // 95\n    }, \"gold:\"), \"\\n        \", HTML.DIV({                                                                       // 96\n      \"class\": \"value\"                                                                                          // 97\n    }, Blaze.View(\"lookup:goldval\", function() {                                                                // 98\n      return Spacebars.mustache(view.lookup(\"goldval\"));                                                        // 99\n    })), \"\\n      \"), \"\\n      \", HTML.DIV({                                                                    // 100\n      \"class\": \"exp\"                                                                                            // 101\n    }, \"\\n        \", HTML.DIV({                                                                                 // 102\n      \"class\": \"label\"                                                                                          // 103\n    }, \"exp:\"), \"\\n        \", HTML.DIV({                                                                        // 104\n      \"class\": \"value\"                                                                                          // 105\n    }, Blaze.View(\"lookup:exp\", function() {                                                                    // 106\n      return Spacebars.mustache(view.lookup(\"exp\"));                                                            // 107\n    })), \"\\n      \"), \"\\n    \"), \"\\n    \", HTML.DIV({                                                           // 108\n      \"class\": \"sub-container\"                                                                                  // 109\n    }, \"\\n      \", HTML.DIV({                                                                                   // 110\n      \"class\": \"move\"                                                                                           // 111\n    }, \"\\n        \", HTML.DIV({                                                                                 // 112\n      \"class\": \"label\"                                                                                          // 113\n    }), \"\\n        \", HTML.DIV({                                                                                // 114\n      \"class\": \"value\"                                                                                          // 115\n    }), \"\\n        \", HTML.BUTTON({                                                                             // 116\n      \"class\": \"inc-button\"                                                                                     // 117\n    }, HTML.CharRef({                                                                                           // 118\n      html: \"&plus;\",                                                                                           // 119\n      str: \"+\"                                                                                                  // 120\n    })), \"\\n      \"), \"\\n    \"), \"\\n  \"), \"\\n\"), \"\\n\" ];                                                        // 121\n  });                                                                                                           // 122\n}));                                                                                                            // 123\n                                                                                                                // 124\nTemplate.__checkName(\"inventoryitem\");                                                                          // 125\nTemplate[\"inventoryitem\"] = new Template(\"Template.inventoryitem\", (function() {                                // 126\n  var view = this;                                                                                              // 127\n  return HTML.LI({                                                                                              // 128\n    \"class\": \"item\"                                                                                             // 129\n  }, \"\\n\", HTML.SPAN({                                                                                          // 130\n    \"class\": \"text\"                                                                                             // 131\n  }, \"Name: \", Blaze.View(\"lookup:name\", function() {                                                           // 132\n    return Spacebars.mustache(view.lookup(\"name\"));                                                             // 133\n  })), \"\\n\", HTML.P(\"\\n\", HTML.SPAN({                                                                           // 134\n    \"class\": \"text\"                                                                                             // 135\n  }, \"Key Words: \", Blaze.View(\"lookup:keys\", function() {                                                      // 136\n    return Spacebars.mustache(view.lookup(\"keys\"));                                                             // 137\n  })), \"\\n\", HTML.SPAN({                                                                                        // 138\n    \"class\": \"text\"                                                                                             // 139\n  }, \"Upgrade Slots: \", Blaze.View(\"lookup:upgradeSlots\", function() {                                          // 140\n    return Spacebars.mustache(view.lookup(\"upgradeSlots\"));                                                     // 141\n  })), \"\\n\", HTML.SPAN({                                                                                        // 142\n    \"class\": \"text\"                                                                                             // 143\n  }, \"Weight: \", Blaze.View(\"lookup:weight\", function() {                                                       // 144\n    return Spacebars.mustache(view.lookup(\"weight\"));                                                           // 145\n  })), \"\\n\", HTML.SPAN({                                                                                        // 146\n    \"class\": \"text\"                                                                                             // 147\n  }, \"Value: \", Blaze.View(\"lookup:value\", function() {                                                         // 148\n    return Spacebars.mustache(view.lookup(\"value\"));                                                            // 149\n  })), \"\\n\"), \"\\n\", HTML.P({                                                                                    // 150\n    \"class\": \"text\"                                                                                             // 151\n  }, \"Description: \", Blaze.View(\"lookup:desc\", function() {                                                    // 152\n    return Spacebars.mustache(view.lookup(\"desc\"));                                                             // 153\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n'));            // 154\n}));                                                                                                            // 155\n                                                                                                                // 156\nTemplate.__checkName(\"nav\");                                                                                    // 157\nTemplate[\"nav\"] = new Template(\"Template.nav\", (function() {                                                    // 158\n  var view = this;                                                                                              // 159\n  return HTML.Raw('<div>\\n  <a href=\"/Details\">Hero Details</a>\\n  <a href=\"/Equipment\">Equipment</a>\\n  <a href=\"/Sidebag\">Sidebag</a>\\n  <a href=\"/Extras\">Extras</a>\\n  <a href=\"/Effects\">effects</a>\\n  <a href=\"/Abilities\">Abilities</a>\\n</div>');\n}));                                                                                                            // 161\n                                                                                                                // 162\nTemplate.__checkName(\"Equipment\");                                                                              // 163\nTemplate[\"Equipment\"] = new Template(\"Template.Equipment\", (function() {                                        // 164\n  var view = this;                                                                                              // 165\n  return [ Spacebars.include(view.lookupTemplate(\"nav\")), \"\\n\", Spacebars.With(function() {                     // 166\n    return Spacebars.call(view.lookup(\"inventory\"));                                                            // 167\n  }, function() {                                                                                               // 168\n    return [ \"\\n\", HTML.DIR({                                                                                   // 169\n      \"class\": \"inventoryView\"                                                                                  // 170\n    }, \"\\n    \", HTML.H3(\"Inventory \", HTML.BUTTON({                                                            // 171\n      \"class\": \"newitem\"                                                                                        // 172\n    }, HTML.CharRef({                                                                                           // 173\n      html: \"&plus;\",                                                                                           // 174\n      str: \"+\"                                                                                                  // 175\n    }), \" New Item\")), \"\\n\\n      \", HTML.UL(\"\\n          \", Blaze.Each(function() {                            // 176\n      return Spacebars.call(view.lookup(\"inventory\"));                                                          // 177\n    }, function() {                                                                                             // 178\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"inventoryitem\")), \"\\n          \" ];       // 179\n    }), \"\\n      \"), \"\\n    \"), \"\\n    \" ];                                                                     // 180\n  }), \"\\n    \", Spacebars.With(function() {                                                                     // 181\n    return Spacebars.call(view.lookup(\"itemWeight\"));                                                           // 182\n  }, function() {                                                                                               // 183\n    return [ \"\\n    \", HTML.P({                                                                                 // 184\n      id: \"weight\"                                                                                              // 185\n    }, \"Total Weight: \", Blaze.View(\"lookup:itemWeight\", function() {                                           // 186\n      return Spacebars.mustache(view.lookup(\"itemWeight\"));                                                     // 187\n    })), \"\\n    \" ];                                                                                            // 188\n  }) ];                                                                                                         // 189\n}));                                                                                                            // 190\n                                                                                                                // 191\nTemplate.__checkName(\"sidebag\");                                                                                // 192\nTemplate[\"sidebag\"] = new Template(\"Template.sidebag\", (function() {                                            // 193\n  var view = this;                                                                                              // 194\n  return [ Spacebars.include(view.lookupTemplate(\"nav\")), \"\\n\", Spacebars.With(function() {                     // 195\n    return Spacebars.call(view.lookup(\"inventory\"));                                                            // 196\n  }, function() {                                                                                               // 197\n    return [ \"\\n\", HTML.DIR({                                                                                   // 198\n      \"class\": \"inventoryView\"                                                                                  // 199\n    }, \"\\n    \", HTML.H3(\"Sidebag \", HTML.BUTTON({                                                              // 200\n      \"class\": \"newitem\"                                                                                        // 201\n    }, HTML.CharRef({                                                                                           // 202\n      html: \"&plus;\",                                                                                           // 203\n      str: \"+\"                                                                                                  // 204\n    }), \" New Item\")), \"\\n\\n      \", HTML.UL(\"\\n          \", Blaze.Each(function() {                            // 205\n      return Spacebars.call(view.lookup(\"inventory\"));                                                          // 206\n    }, function() {                                                                                             // 207\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"sidebagItem\")), \"\\n          \" ];         // 208\n    }), \"\\n      \"), \"\\n    \"), \"\\n    \" ];                                                                     // 209\n  }) ];                                                                                                         // 210\n}));                                                                                                            // 211\n                                                                                                                // 212\nTemplate.__checkName(\"sidebagItem\");                                                                            // 213\nTemplate[\"sidebagItem\"] = new Template(\"Template.sidebagItem\", (function() {                                    // 214\n  var view = this;                                                                                              // 215\n  return HTML.LI({                                                                                              // 216\n    \"class\": \"item\"                                                                                             // 217\n  }, \"\\n\", HTML.P(\"\\n\", HTML.SPAN({                                                                             // 218\n    \"class\": \"text\"                                                                                             // 219\n  }, Blaze.View(\"lookup:name\", function() {                                                                     // 220\n    return Spacebars.mustache(view.lookup(\"name\"));                                                             // 221\n  })), \"\\n\", HTML.SPAN({                                                                                        // 222\n    \"class\": \"text\"                                                                                             // 223\n  }, \" ct: \", Blaze.View(\"lookup:count\", function() {                                                           // 224\n    return Spacebars.mustache(view.lookup(\"count\"));                                                            // 225\n  })), \"\\n\"), \"\\n\", HTML.P({                                                                                    // 226\n    \"class\": \"text\"                                                                                             // 227\n  }, Blaze.View(\"lookup:desc\", function() {                                                                     // 228\n    return Spacebars.mustache(view.lookup(\"desc\"));                                                             // 229\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n'));            // 230\n}));                                                                                                            // 231\n                                                                                                                // 232\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"char-list.js\":[\"meteor/templating\",\"../api/brimChar.js\",\"./char-list.html\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/char-list.js                                                                                      //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar _templating = require('meteor/templating');                                                                 // 1\n                                                                                                                //\nvar _brimChar = require('../api/brimChar.js');                                                                  // 2\n                                                                                                                //\nrequire('./char-list.html');                                                                                    // 7\n                                                                                                                //\n// # Destroy old editable if it exists                                                                          //\n                                                                                                                //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                inventory Helpers and Events                                                  //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n_templating.Template.main.helpers({ //try clist                                                                 // 19\n                                                                                                                //\n  Characters: function () {                                                                                     // 20\n    function Characters() {                                                                                     //\n      return _brimChar.Characters.find({}, { sort: { createdAt: +1 } });                                        // 21\n    }                                                                                                           //\n                                                                                                                //\n    return Characters;                                                                                          //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n_templating.Template.main.events({                                                                              // 25\n  'click .clear': function () {                                                                                 // 27\n    function clickClear() {}                                                                                    //\n                                                                                                                //\n    return clickClear;                                                                                          //\n  }(),                                                                                                          //\n  'click .save': function () {                                                                                  // 31\n    function clickSave(event) {                                                                                 //\n      //prevent defaulting submit                                                                               //\n      event.preventDefault();                                                                                   // 33\n                                                                                                                //\n      var name = document.getElementById('name').value;                                                         // 35\n      var type = document.getElementById('type').value;                                                         // 36\n      //const type = target.type.value;                                                                         //\n      var tempCharacter = new person(name, type);                                                               // 31\n      // var tempInv = new invBuild();                                                                          //\n                                                                                                                //\n      // inventorydb.insert({                                                                                   //\n      //   owner: name,                                                                                         //\n      //   createdAt: new Date(),                                                                               //\n      //   name: \"item\",                                                                                        //\n                                                                                                                //\n      // });                                                                                                    //\n      //Insert new char data to collection characters (in brimChar.js)                                          //\n      _brimChar.Characters.insert(tempCharacter, {                                                              // 31\n        // name: tex                                                                                            //\n        // createdAt: new Date(),                                                                               //\n      });                                                                                                       //\n                                                                                                                //\n      alert(\"Your Character: \" + name + \" has been saved!\");                                                    // 53\n                                                                                                                //\n      //clear name from input                                                                                   //\n      // target.name.value = '';                                                                                //\n      //target.class.value = '';                                                                                //\n                                                                                                                //\n      //alert(tempCharacter.getInfo());                                                                         //\n      document.getElementById('name').value = \"\";                                                               // 31\n    }                                                                                                           //\n                                                                                                                //\n    return clickSave;                                                                                           //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                charlist Helpers and Events                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n_templating.Template.charlist.helpers({                                                                         // 70\n  // tempchar() {                                                                                               //\n  //  \treturn Characters.findOne({name});                                                                       //\n  //  },                                                                                                        //\n});                                                                                                             //\n                                                                                                                //\n_templating.Template.charlist.events({                                                                          // 76\n  // 'click .toggle-checked'() {                                                                                //\n  //   // Set the checked property to the opposite of its current value                                         //\n  //   Tasks.update(this._id, {                                                                                 //\n  //     $set: { checked: ! this.checked },                                                                     //\n  //   });                                                                                                      //\n  // },                                                                                                         //\n                                                                                                                //\n  'click .delete': function () {                                                                                // 83\n    function clickDelete() {                                                                                    //\n                                                                                                                //\n      _brimChar.Characters.remove(this._id);                                                                    // 85\n    }                                                                                                           //\n                                                                                                                //\n    return clickDelete;                                                                                         //\n  }(),                                                                                                          //\n  'click .edit': function () {                                                                                  // 88\n    function clickEdit() {                                                                                      //\n                                                                                                                //\n      _brimChar.Characters.update(this._id, {                                                                   // 90\n        $set: { activeChar: true }                                                                              // 91\n      });                                                                                                       //\n                                                                                                                //\n      FlowRouter.go('/Details');                                                                                // 94\n    }                                                                                                           //\n                                                                                                                //\n    return clickEdit;                                                                                           //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                charinfo Helpers and Events                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n_templating.Template.charinfo.onCreated(function () {                                                           // 102\n  var self = this;                                                                                              // 103\n  self.autorun(function () {                                                                                    // 104\n    self.subscribe('Characters');                                                                               // 105\n  });                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n_templating.Template.charinfo.helpers({                                                                         // 109\n  activeCharacter: function () {                                                                                // 111\n    function activeCharacter() {                                                                                //\n      var output;                                                                                               // 112\n      var cursor = _brimChar.Characters.find();                                                                 // 113\n      cursor.forEach(function (doc) {                                                                           // 114\n        if (doc.activeChar == true) {                                                                           // 115\n          output = doc;                                                                                         // 116\n        }                                                                                                       //\n      });                                                                                                       //\n      return output;                                                                                            // 119\n    }                                                                                                           //\n                                                                                                                //\n    return activeCharacter;                                                                                     //\n  }(),                                                                                                          //\n                                                                                                                //\n                                                                                                                //\n  // inventory() {                                                                                              //\n  //  var char = activeCharacter();                                                                             //\n  //  var inv = inventorydb.find({owner: this._id});                                                            //\n  //  return inv;                                                                                               //\n  // },                                                                                                         //\n                                                                                                                //\n  // returns all keys and props of object                                                                       //\n  stat: function () {                                                                                           // 129\n    function stat() {                                                                                           //\n      var atts = [];                                                                                            // 130\n      var char = activeCharacter2();                                                                            // 131\n      for (var key in meteorBabelHelpers.sanitizeForInObject(char)) {                                           // 132\n        var obj = char[key];                                                                                    // 133\n        for (var prop in meteorBabelHelpers.sanitizeForInObject(obj)) {                                         // 134\n          atts.push({ key: prop, prop: obj[prop] });                                                            // 135\n        };                                                                                                      //\n      };                                                                                                        //\n      return atts;                                                                                              // 138\n    }                                                                                                           //\n                                                                                                                //\n    return stat;                                                                                                //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n_templating.Template.charinfo.events({                                                                          // 144\n  'click .back': function () {                                                                                  // 146\n    function clickBack() {                                                                                      //\n      _brimChar.Characters.update(this._id, {                                                                   // 147\n        $set: { activeChar: false }                                                                             // 148\n      });                                                                                                       //\n      FlowRouter.go('home');                                                                                    // 150\n    }                                                                                                           //\n                                                                                                                //\n    return clickBack;                                                                                           //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                Equipment Helpers and Events                                                  //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n// 'click td'(event) {                                                                                          //\n//   var target = event.target;                                                                                 //\n//   var self = target.innerHTML;                                                                               //\n//   var res = prompt('new val');                                                                               //\n                                                                                                                //\n//    Characters.update(this._id,{                                                                              //\n                                                                                                                //\n//    });                                                                                                       //\n// },                                                                                                           //\n                                                                                                                //\n_templating.Template.Equipment.helpers({                                                                        // 170\n  inventory: function () {                                                                                      // 171\n    function inventory() {                                                                                      //\n                                                                                                                //\n      var char = activeCharacter();                                                                             // 173\n      var inv = _brimChar.inventorydb.find({ owner: this._id });                                                // 174\n      return inv;                                                                                               // 175\n    }                                                                                                           //\n                                                                                                                //\n    return inventory;                                                                                           //\n  }(),                                                                                                          //\n  itemWeight: function () {                                                                                     // 178\n    function itemWeight() {                                                                                     //\n                                                                                                                //\n      var char = activeCharacter();                                                                             // 180\n      var count = 0;                                                                                            // 181\n      var max = Number(char.maxWeight);                                                                         // 182\n      var inv = _brimChar.inventorydb.find({ owner: this._id });                                                // 183\n      var obj = inv.fetch();                                                                                    // 184\n      var curr;                                                                                                 // 185\n                                                                                                                //\n      for (var items in meteorBabelHelpers.sanitizeForInObject(obj)) {                                          // 187\n        curr = Number(obj[items].weight);                                                                       // 188\n        count += curr;                                                                                          // 189\n      }                                                                                                         //\n      if (count >= max) {                                                                                       // 191\n        return count + \" / \" + char.maxWeight + \" Your Character is overweight !!!\";                            // 192\n      } else {                                                                                                  //\n        return count + \" / \" + char.maxWeight;                                                                  // 194\n      }                                                                                                         //\n    }                                                                                                           //\n                                                                                                                //\n    return itemWeight;                                                                                          //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n_templating.Template.Equipment.events({                                                                         // 200\n  'click .newitem': function () {                                                                               // 201\n    function clickNewitem() {                                                                                   //\n                                                                                                                //\n      var itemName = prompt(\"item name?\");                                                                      // 203\n      var slots = prompt(\"how many upgrade slots?\");                                                            // 204\n      var weight = prompt(\"weight of \" + itemName + \"?\");                                                       // 205\n      var val = prompt(\"worth of \" + itemName + \"?\");                                                           // 206\n      var desc = prompt(\"Describe \" + itemName + \":\");                                                          // 207\n      var itemres = basicInv(this._id, itemName, slots, weight, val, desc);                                     // 208\n      _brimChar.inventorydb.insert(itemres, {});                                                                // 209\n    }                                                                                                           //\n                                                                                                                //\n    return clickNewitem;                                                                                        //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                inventory Helpers and Events                                                  //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n_templating.Template.inventoryitem.helpers({});                                                                 // 220\n                                                                                                                //\n_templating.Template.inventoryitem.events({                                                                     // 224\n  'click .delete': function () {                                                                                // 226\n    function clickDelete() {                                                                                    //\n      _brimChar.inventorydb.remove(this._id);                                                                   // 227\n    }                                                                                                           //\n                                                                                                                //\n    return clickDelete;                                                                                         //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                sidebag Helpers and Events                                                    //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n_templating.Template.sidebag.helpers({                                                                          // 237\n  inventory: function () {                                                                                      // 238\n    function inventory() {                                                                                      //\n                                                                                                                //\n      var char = activeCharacter();                                                                             // 240\n      var inv = _brimChar.sidebagdb.find({ owner: this._id });                                                  // 241\n      return inv;                                                                                               // 242\n    }                                                                                                           //\n                                                                                                                //\n    return inventory;                                                                                           //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n_templating.Template.sidebag.events({                                                                           // 248\n  'click .newitem': function () {                                                                               // 249\n    function clickNewitem() {                                                                                   //\n                                                                                                                //\n      var itemName = prompt(\"item name?\");                                                                      // 251\n      var count = prompt(\"How many of \" + itemName + \" are there ?\");                                           // 252\n      var desc = prompt(\"Describe \" + itemName + \":\");                                                          // 253\n      var itemres = basicSideBag(this._id, itemName, \"sidebag\", count, desc);                                   // 254\n      _brimChar.sidebagdb.insert(itemres, {});                                                                  // 255\n    }                                                                                                           //\n                                                                                                                //\n    return clickNewitem;                                                                                        //\n  }(),                                                                                                          //\n  'click .delete': function () {                                                                                // 260\n    function clickDelete() {                                                                                    //\n      _brimChar.sidebagdb.remove(this._id);                                                                     // 261\n    }                                                                                                           //\n                                                                                                                //\n    return clickDelete;                                                                                         //\n  }()                                                                                                           //\n});                                                                                                             //\n                                                                                                                //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                Classes and Functions                                                         //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nfunction person(name, type) {                                                                                   // 270\n  // var invBuild = invBuild();                                                                                 //\n  var doc = {                                                                                                   // 272\n    name: name,                                                                                                 // 273\n    'class': type,                                                                                              // 274\n    lvl: 1,                                                                                                     // 275\n    inventory: name,                                                                                            // 276\n    agility: 1,                                                                                                 // 277\n    strength: 1,                                                                                                // 278\n    health: 10,                                                                                                 // 279\n    defense: 5,                                                                                                 // 280\n    armor: 0,                                                                                                   // 281\n    cunning: 0,                                                                                                 // 282\n    lore: 0,                                                                                                    // 283\n    sanity: 0,                                                                                                  // 284\n    willpower: 0,                                                                                               // 285\n    Sarmor: 0,                                                                                                  // 286\n    spirit: 0,                                                                                                  // 287\n    luck: 0,                                                                                                    // 288\n    melee: 0,                                                                                                   // 289\n    combat: 0,                                                                                                  // 290\n    range: 0,                                                                                                   // 291\n    maxGrit: 0,                                                                                                 // 292\n    initiative: 0,                                                                                              // 293\n    corruption: 1,                                                                                              // 294\n    darkStone: 0,                                                                                               // 295\n    maxWeight: 10,                                                                                              // 296\n    gold: 100,                                                                                                  // 297\n    exp: 1000,                                                                                                  // 298\n    move: 1                                                                                                     // 299\n  };                                                                                                            //\n  return doc;                                                                                                   // 301\n}                                                                                                               //\n                                                                                                                //\nfunction basicInv(owner, name, slots, weight, val, desc) {                                                      // 304\n  var item = {                                                                                                  // 305\n    \"owner\": owner,                                                                                             // 306\n    \"name\": name,                                                                                               // 307\n    \"type\": \"equipment\",                                                                                        // 308\n    \"keys\": \"item\",                                                                                             // 309\n    \"upgradeSlots\": slots,                                                                                      // 310\n    \"weight\": weight,                                                                                           // 311\n    \"value\": val,                                                                                               // 312\n    \"desc\": desc                                                                                                // 313\n  };                                                                                                            //\n  return item;                                                                                                  // 315\n};                                                                                                              //\n                                                                                                                //\nfunction basicSideBag(owner, name, type, count, desc) {                                                         // 318\n                                                                                                                //\n  var item = {                                                                                                  // 320\n    \"owner\": owner,                                                                                             // 321\n    \"name\": name,                                                                                               // 322\n    \"type\": type,                                                                                               // 323\n    \"count\": count,                                                                                             // 324\n    \"desc\": desc                                                                                                // 325\n  };                                                                                                            //\n  return item;                                                                                                  // 327\n};                                                                                                              //\n                                                                                                                //\n// function invBuild() {                                                                                        //\n//   var item1 = new basicInv(this._id,\"Mr. Sword\");                                                            //\n//   var item2 = new basicInv(this._id,\"Shield\");                                                               //\n//   var item3 = new basicInv(this._id,\"Dagger\");                                                               //\n//   var arr = [item1,item2,item3];                                                                             //\n//   return arr;                                                                                                //\n// };                                                                                                           //\n                                                                                                                //\nfunction activeCharacter() {                                                                                    // 338\n  var output;                                                                                                   // 339\n  var cursor = _brimChar.Characters.find();                                                                     // 340\n  cursor.forEach(function (doc) {                                                                               // 341\n    if (doc.activeChar == true) {                                                                               // 342\n      output = doc;                                                                                             // 343\n    }                                                                                                           //\n  });                                                                                                           //\n  return output;                                                                                                // 346\n};                                                                                                              //\n                                                                                                                //\nfunction activeCharacter2() {                                                                                   // 349\n  var output;                                                                                                   // 350\n  var cursor = _brimChar.Characters.find({ activeChar: true });                                                 // 351\n  output = cursor.fetch();                                                                                      // 352\n  return output;                                                                                                // 353\n};                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"api\":{\"brimChar.js\":[\"meteor/mongo\",function(require,exports){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/api/brimChar.js                                                                                      //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nexports.__esModule = true;                                                                                      //\nexports.extrasdb = exports.sidebagdb = exports.inventorydb = exports.Characters = undefined;                    //\n                                                                                                                //\nvar _mongo = require('meteor/mongo');                                                                           // 1\n                                                                                                                //\nvar Characters = exports.Characters = new _mongo.Mongo.Collection('characters');                                // 3\nvar inventorydb = exports.inventorydb = new _mongo.Mongo.Collection('inventory');                               // 4\nvar sidebagdb = exports.sidebagdb = new _mongo.Mongo.Collection('sidebag');                                     // 5\nvar extrasdb = exports.extrasdb = new _mongo.Mongo.Collection('extras');                                        // 6\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"lib\":{\"routes.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// lib/routes.js                                                                                                //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nFlowRouter.route('/', {                                                                                         // 1\n\tname: 'home',                                                                                                  // 2\n\taction: function () {                                                                                          // 3\n\t\tfunction action() {                                                                                           //\n\t\t\tBlazeLayout.render('main');                                                                                  // 4\n\t\t}                                                                                                             //\n                                                                                                                //\n\t\treturn action;                                                                                                //\n\t}()                                                                                                            //\n});                                                                                                             //\n                                                                                                                //\nFlowRouter.route('/Details', {                                                                                  // 9\n\tname: 'Details',                                                                                               // 10\n\taction: function () {                                                                                          // 11\n\t\tfunction action() {                                                                                           //\n\t\t\tBlazeLayout.render('charinfo');                                                                              // 12\n\t\t}                                                                                                             //\n                                                                                                                //\n\t\treturn action;                                                                                                //\n\t}()                                                                                                            //\n});                                                                                                             //\n                                                                                                                //\nFlowRouter.route('/Equipment', {                                                                                // 17\n\tname: 'Equipment',                                                                                             // 18\n\taction: function () {                                                                                          // 19\n\t\tfunction action() {                                                                                           //\n\t\t\tBlazeLayout.render('Equipment');                                                                             // 20\n\t\t}                                                                                                             //\n                                                                                                                //\n\t\treturn action;                                                                                                //\n\t}()                                                                                                            //\n});                                                                                                             //\n                                                                                                                //\nFlowRouter.route('/Sidebag', {                                                                                  // 25\n\tname: 'Sidebag',                                                                                               // 26\n\taction: function () {                                                                                          // 27\n\t\tfunction action() {                                                                                           //\n\t\t\tBlazeLayout.render('sidebag');                                                                               // 28\n\t\t}                                                                                                             //\n                                                                                                                //\n\t\treturn action;                                                                                                //\n\t}()                                                                                                            //\n});                                                                                                             //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"client\":{\"main.js\":[\"../imports/ui/char-list.js\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// client/main.js                                                                                               //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nrequire('../imports/ui/char-list.js');                                                                          // 1\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./lib/routes.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/char-list.html","/imports/ui/template.char-list.js","/imports/ui/char-list.js","/imports/api/brimChar.js","/lib/routes.js","/client/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["module.exports = require(\"./template.char-list.js\");\n","\nTemplate.__checkName(\"main\");\nTemplate[\"main\"] = new Template(\"Template.main\", (function() {\n  var view = this;\n  return [ HTML.Raw('<header class=\"container\">\\n      <h1>Brimstone</h1>\\n\\n      <form class=\"form-inline\">\\n      <div class=\"form-group\">\\n        <input class=\"form-control\" id=\"name\" type=\"text\" name=\"name\" placeholder=\"Add a new character\">\\n        <select class=\"form-control\" id=\"type\" type=\"text\" name=\"type\"> \\n         <option>Warrior</option>\\n        <option>Mage</option>  \\n        <option>Bowman</option>\\n        <option>Theif</option>\\n        <option>Darkness</option>\\n        </select>\\n        \\n        <button class=\"save btn-primary\">&plus;</button>\\n        </div>\\n      </form>\\n    </header>\\n  '), HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n    \", HTML.OL(\"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"Characters\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"charlist\")), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \") ];\n}));\n\nTemplate.__checkName(\"charlist\");\nTemplate[\"charlist\"] = new Template(\"Template.charlist\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": \"character\"\n  }, \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, Blaze.View(\"lookup:class\", function() {\n    return Spacebars.mustache(view.lookup(\"class\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"lvl: \", Blaze.View(\"lookup:lvl\", function() {\n    return Spacebars.mustache(view.lookup(\"lvl\"));\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n  '));\n}));\n\nTemplate.__checkName(\"charinfo\");\nTemplate[\"charinfo\"] = new Template(\"Template.charinfo\", (function() {\n  var view = this;\n  return Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"activeCharacter\"));\n  }, function() {\n    return [ \"\\n\", HTML.BUTTON({\n      \"class\": \"back\",\n      name: function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }\n    }, HTML.CharRef({\n      html: \"&lt;\",\n      str: \"<\"\n    })), \"\\n\", Spacebars.include(view.lookupTemplate(\"nav\")), \"\\n\", HTML.DIV({\n      \"class\": \"container\"\n    }, \"\\n  \", HTML.DIV({\n      \"class\": \"row\"\n    }, \"\\n    \", HTML.DIV({\n      \"class\": \"col-md-6\"\n    }, \"\\n      \", HTML.DIV({\n      id: \"name\"\n    }, Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    })), \"\\n      \", HTML.DIV({\n      id: \"class\"\n    }, Blaze.View(\"lookup:class\", function() {\n      return Spacebars.mustache(view.lookup(\"class\"));\n    })), \"\\n    \"), \"\\n    \", HTML.DIV({\n      \"class\": \"col-md-6\"\n    }, \"\\n      \", HTML.DIV({\n      id: \"key\"\n    }, Blaze.View(\"lookup:keys\", function() {\n      return Spacebars.mustache(view.lookup(\"keys\"));\n    })), \"\\n      \", HTML.DIV({\n      id: \"level\"\n    }, Blaze.View(\"lookup:lvl\", function() {\n      return Spacebars.mustache(view.lookup(\"lvl\"));\n    })), \"\\n    \"), \"\\n  \"), \"\\n  \\n    \", HTML.DIV({\n      \"class\": \"row\"\n    }, \"\\n    \", Spacebars.With(function() {\n      return Spacebars.call(view.lookup(\"stat\"));\n    }, function() {\n      return [ \"\\n    \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"stat\"));\n      }, function() {\n        return [ \"\\n      \", HTML.DIV({\n          \"class\": \"col-md-4\"\n        }, \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:..key\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"key\"));\n        })), \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:..prop\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"prop\"));\n        })), \"\\n      \"), \"\\n    \" ];\n      }), \"\\n    \" ];\n    }), \"\\n    \"), \"\\n\\n  \", HTML.DIV({\n      \"class\": \"hero-extras\"\n    }, \"\\n    \", HTML.DIV({\n      \"class\": \"sub-container\"\n    }, \"\\n      \", HTML.DIV({\n      \"class\": \"gold\"\n    }, \"\\n        \", HTML.DIV({\n      \"class\": \"label\"\n    }, \"gold:\"), \"\\n        \", HTML.DIV({\n      \"class\": \"value\"\n    }, Blaze.View(\"lookup:goldval\", function() {\n      return Spacebars.mustache(view.lookup(\"goldval\"));\n    })), \"\\n      \"), \"\\n      \", HTML.DIV({\n      \"class\": \"exp\"\n    }, \"\\n        \", HTML.DIV({\n      \"class\": \"label\"\n    }, \"exp:\"), \"\\n        \", HTML.DIV({\n      \"class\": \"value\"\n    }, Blaze.View(\"lookup:exp\", function() {\n      return Spacebars.mustache(view.lookup(\"exp\"));\n    })), \"\\n      \"), \"\\n    \"), \"\\n    \", HTML.DIV({\n      \"class\": \"sub-container\"\n    }, \"\\n      \", HTML.DIV({\n      \"class\": \"move\"\n    }, \"\\n        \", HTML.DIV({\n      \"class\": \"label\"\n    }), \"\\n        \", HTML.DIV({\n      \"class\": \"value\"\n    }), \"\\n        \", HTML.BUTTON({\n      \"class\": \"inc-button\"\n    }, HTML.CharRef({\n      html: \"&plus;\",\n      str: \"+\"\n    })), \"\\n      \"), \"\\n    \"), \"\\n  \"), \"\\n\"), \"\\n\" ];\n  });\n}));\n\nTemplate.__checkName(\"inventoryitem\");\nTemplate[\"inventoryitem\"] = new Template(\"Template.inventoryitem\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": \"item\"\n  }, \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Name: \", Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \"\\n\", HTML.P(\"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Key Words: \", Blaze.View(\"lookup:keys\", function() {\n    return Spacebars.mustache(view.lookup(\"keys\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Upgrade Slots: \", Blaze.View(\"lookup:upgradeSlots\", function() {\n    return Spacebars.mustache(view.lookup(\"upgradeSlots\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Weight: \", Blaze.View(\"lookup:weight\", function() {\n    return Spacebars.mustache(view.lookup(\"weight\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Value: \", Blaze.View(\"lookup:value\", function() {\n    return Spacebars.mustache(view.lookup(\"value\"));\n  })), \"\\n\"), \"\\n\", HTML.P({\n    \"class\": \"text\"\n  }, \"Description: \", Blaze.View(\"lookup:desc\", function() {\n    return Spacebars.mustache(view.lookup(\"desc\"));\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n'));\n}));\n\nTemplate.__checkName(\"nav\");\nTemplate[\"nav\"] = new Template(\"Template.nav\", (function() {\n  var view = this;\n  return HTML.Raw('<div>\\n  <a href=\"/Details\">Hero Details</a>\\n  <a href=\"/Equipment\">Equipment</a>\\n  <a href=\"/Sidebag\">Sidebag</a>\\n  <a href=\"/Extras\">Extras</a>\\n  <a href=\"/Effects\">effects</a>\\n  <a href=\"/Abilities\">Abilities</a>\\n</div>');\n}));\n\nTemplate.__checkName(\"Equipment\");\nTemplate[\"Equipment\"] = new Template(\"Template.Equipment\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"nav\")), \"\\n\", Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"inventory\"));\n  }, function() {\n    return [ \"\\n\", HTML.DIR({\n      \"class\": \"inventoryView\"\n    }, \"\\n    \", HTML.H3(\"Inventory \", HTML.BUTTON({\n      \"class\": \"newitem\"\n    }, HTML.CharRef({\n      html: \"&plus;\",\n      str: \"+\"\n    }), \" New Item\")), \"\\n\\n      \", HTML.UL(\"\\n          \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"inventory\"));\n    }, function() {\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"inventoryitem\")), \"\\n          \" ];\n    }), \"\\n      \"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n    \", Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"itemWeight\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P({\n      id: \"weight\"\n    }, \"Total Weight: \", Blaze.View(\"lookup:itemWeight\", function() {\n      return Spacebars.mustache(view.lookup(\"itemWeight\"));\n    })), \"\\n    \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"sidebag\");\nTemplate[\"sidebag\"] = new Template(\"Template.sidebag\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"nav\")), \"\\n\", Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"inventory\"));\n  }, function() {\n    return [ \"\\n\", HTML.DIR({\n      \"class\": \"inventoryView\"\n    }, \"\\n    \", HTML.H3(\"Sidebag \", HTML.BUTTON({\n      \"class\": \"newitem\"\n    }, HTML.CharRef({\n      html: \"&plus;\",\n      str: \"+\"\n    }), \" New Item\")), \"\\n\\n      \", HTML.UL(\"\\n          \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"inventory\"));\n    }, function() {\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"sidebagItem\")), \"\\n          \" ];\n    }), \"\\n      \"), \"\\n    \"), \"\\n    \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"sidebagItem\");\nTemplate[\"sidebagItem\"] = new Template(\"Template.sidebagItem\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": \"item\"\n  }, \"\\n\", HTML.P(\"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \" ct: \", Blaze.View(\"lookup:count\", function() {\n    return Spacebars.mustache(view.lookup(\"count\"));\n  })), \"\\n\"), \"\\n\", HTML.P({\n    \"class\": \"text\"\n  }, Blaze.View(\"lookup:desc\", function() {\n    return Spacebars.mustache(view.lookup(\"desc\"));\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n'));\n}));\n","import { Template } from 'meteor/templating';\nimport { Characters } from '../api/brimChar.js';\nimport { inventorydb } from '../api/brimChar.js';\nimport { sidebagdb } from '../api/brimChar.js';\nimport { extrasdb } from '../api/brimChar.js';\n \nimport './char-list.html';\n\n\n  \n\n    // # Destroy old editable if it exists\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                inventory Helpers and Events\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nTemplate.main.helpers({ //try clist\n  Characters() {\n    return Characters.find({}, { sort: { createdAt: +1 } });\n  },\n});\n\nTemplate.main.events({\n\n  'click .clear' (){\n\n  },\n\n  'click .save'(event) {\n    //prevent defaulting submit\n    event.preventDefault();\n\n    const name = document.getElementById('name').value;\n    const type = document.getElementById('type').value;\n    //const type = target.type.value;\n    var tempCharacter = new person(name,type);\n    // var tempInv = new invBuild();\n\n    // inventorydb.insert({\n    //   owner: name,\n    //   createdAt: new Date(),\n    //   name: \"item\",\n      \n    // });\n    //Insert new char data to collection characters (in brimChar.js)\n    Characters.insert(tempCharacter,{ \n      // name: tex\n      // createdAt: new Date(),\n    });\n\n    alert(\"Your Character: \" + name + \" has been saved!\");\n\n    //clear name from input\n   // target.name.value = '';\n    //target.class.value = '';\n\n    //alert(tempCharacter.getInfo());\n    document.getElementById('name').value = \"\";\n\n\n  },\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                charlist Helpers and Events\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nTemplate.charlist.helpers({\n\t// tempchar() {\n //  \treturn Characters.findOne({name});\n //  },\n});\n\nTemplate.charlist.events({\n  // 'click .toggle-checked'() {\n  //   // Set the checked property to the opposite of its current value\n  //   Tasks.update(this._id, {\n  //     $set: { checked: ! this.checked },\n  //   });\n  // },\n  'click .delete'() {\n\n    Characters.remove(this._id);\n  },\n\n  'click .edit'() {\n\n    Characters.update(this._id, {\n      $set: {activeChar: true},\n    });\n\n  \tFlowRouter.go('/Details');\n  },\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                charinfo Helpers and Events\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nTemplate.charinfo.onCreated(function() {\n  var self = this;\n  self.autorun(function () {\n    self.subscribe('Characters');\n  });\n});\n\nTemplate.charinfo.helpers({\n\n activeCharacter(){\n  var output;\n  var cursor = Characters.find();\n  cursor.forEach(function(doc){\n    if (doc.activeChar == true) {\n      output = doc;\n    }\n  });\n  return output;\n   },\n\n   // inventory() {\n   //  var char = activeCharacter();\n   //  var inv = inventorydb.find({owner: this._id});\n   //  return inv;\n   // },\n\n// returns all keys and props of object\n   stat() {\n    var atts = [];\n    var char = activeCharacter2();\n    for (var key in char) {\n      var obj = char[key];\n      for (var prop in obj) {\n        atts.push({key : prop, prop: obj[prop]});\n      };\n    };\n    return atts;\n   },\n\n\n});\n\nTemplate.charinfo.events({\n\n  'click .back'(){\n  Characters.update(this._id, {\n        $set: {activeChar: false},\n      });\n  FlowRouter.go('home');\n  },\n  \n\n  // 'click td'(event) {\n  //   var target = event.target;\n  //   var self = target.innerHTML;\n  //   var res = prompt('new val');\n\n  //    Characters.update(this._id,{\n\n  //    });\n  // },\n  \n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                Equipment Helpers and Events\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nTemplate.Equipment.helpers({\n  inventory() {\n    \n    var char = activeCharacter();\n    var inv = inventorydb.find({owner: this._id});\n    return inv;\n\n   },\n   itemWeight() {\n\n    var char = activeCharacter();\n    var count = 0;\n    var max = Number(char.maxWeight);\n    var inv = inventorydb.find({owner: this._id});\n    var obj = inv.fetch();\n    var curr;\n\n    for (var items in obj) {\n      curr = Number(obj[items].weight);\n       count += curr\n    }\n    if (count >= max) {\n     return count + \" / \" + char.maxWeight + \" Your Character is overweight !!!\";\n    } else {\n      return count + \" / \" + char.maxWeight;\n    }\n   },\n\n});\n\nTemplate.Equipment.events({\n  'click .newitem'(){\n\n    var itemName = prompt(\"item name?\");\n    var slots = prompt(\"how many upgrade slots?\");\n    const weight = prompt(\"weight of \" + itemName + \"?\");\n    var val = prompt(\"worth of \" + itemName + \"?\");\n    var desc = prompt(\"Describe \" + itemName + \":\");\n    var itemres = basicInv(this._id,itemName,slots,weight,val,desc);\n    inventorydb.insert(itemres,{\n\n    });\n  },\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                inventory Helpers and Events\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nTemplate.inventoryitem.helpers({\n\n});\n\nTemplate.inventoryitem.events({\n\n  'click .delete'(){\n    inventorydb.remove(this._id);\n    },\n\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                sidebag Helpers and Events\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nTemplate.sidebag.helpers({\n  inventory() {\n    \n    var char = activeCharacter();\n    var inv = sidebagdb.find({owner: this._id});\n    return inv;\n\n   },\n\n});\n\nTemplate.sidebag.events({\n  'click .newitem'(){\n\n      var itemName = prompt(\"item name?\");\n      var count = prompt(\"How many of \" + itemName + \" are there ?\");\n      var desc = prompt(\"Describe \" + itemName + \":\");\n      var itemres = basicSideBag(this._id,itemName,\"sidebag\",count,desc);\n      sidebagdb.insert(itemres,{\n\n      });\n    },\n\n  'click .delete'(){\n    sidebagdb.remove(this._id);\n    },\n\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                Classes and Functions\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction person(name, type) {\n  // var invBuild = invBuild();\n  var doc = {\n    name: name,\n    class: type,\n    lvl: 1,\n    inventory: name,\n    agility: 1,\n    strength: 1,\n    health: 10,\n    defense: 5,\n    armor: 0,\n    cunning: 0,\n    lore: 0,\n    sanity: 0,\n    willpower: 0,\n    Sarmor: 0,\n    spirit: 0,\n    luck: 0,\n    melee: 0,\n    combat: 0,\n    range: 0,\n    maxGrit: 0,\n    initiative: 0,\n    corruption: 1,\n    darkStone: 0,\n    maxWeight: 10,\n    gold: 100,\n    exp: 1000,\n    move: 1,\n  }\n  return doc;\n}\n\nfunction basicInv(owner,name,slots,weight,val,desc)  {\n   var item = {\n    \"owner\": owner,\n    \"name\": name,\n    \"type\": \"equipment\",\n    \"keys\": \"item\",\n    \"upgradeSlots\":  slots,\n    \"weight\": weight,\n    \"value\": val,\n    \"desc\": desc,\n  }\n  return item;\n};\n\nfunction basicSideBag(owner,name,type,count,desc)  {\n\n   var item = {\n    \"owner\": owner,\n    \"name\": name,\n    \"type\": type,\n    \"count\": count,\n    \"desc\": desc,\n  }\n  return item;\n};\n\n// function invBuild() {\n//   var item1 = new basicInv(this._id,\"Mr. Sword\");\n//   var item2 = new basicInv(this._id,\"Shield\");\n//   var item3 = new basicInv(this._id,\"Dagger\");\n//   var arr = [item1,item2,item3];\n//   return arr;\n// };\n\nfunction activeCharacter(){\n  var output;\n  var cursor = Characters.find();\n  cursor.forEach(function(doc){\n    if (doc.activeChar == true) {\n      output = doc;\n    }\n  });\n  return output;\n   };\n\nfunction activeCharacter2(){\n  var output;\n  var cursor = Characters.find({activeChar: true});\n  output = cursor.fetch();\n  return output;\n   };\n","import { Mongo } from 'meteor/mongo';\n\nexport const Characters = new Mongo.Collection('characters');\nexport const inventorydb = new Mongo.Collection('inventory');\nexport const sidebagdb = new Mongo.Collection('sidebag');\nexport const extrasdb = new Mongo.Collection('extras');","FlowRouter.route('/',{\n\tname: 'home',\n\taction() {\n\t\tBlazeLayout.render('main');\n\t}\n\n});\n\nFlowRouter.route('/Details',{\n\tname: 'Details',\n\taction() {\n\t\tBlazeLayout.render('charinfo');\n\t}\n\n});\n\nFlowRouter.route('/Equipment',{\n\tname: 'Equipment',\n\taction() {\n\t\tBlazeLayout.render('Equipment');\n\t}\n\n});\n\nFlowRouter.route('/Sidebag',{\n\tname: 'Sidebag',\n\taction() {\n\t\tBlazeLayout.render('sidebag');\n\t}\n\n});","import '../imports/ui/char-list.js';"]}}]