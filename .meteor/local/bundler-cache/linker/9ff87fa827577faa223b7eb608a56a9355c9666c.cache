[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"char-list.html\":[\"./template.char-list.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// imports/ui/char-list.html                                                                              //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.exports = require(\"./template.char-list.js\");                                                      // 1\n                                                                                                          // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.char-list.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// imports/ui/template.char-list.js                                                                       //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\n                                                                                                          // 1\nTemplate.__checkName(\"main\");                                                                             // 2\nTemplate[\"main\"] = new Template(\"Template.main\", (function() {                                            // 3\n  var view = this;                                                                                        // 4\n  return [ HTML.Raw('<header>\\n      <h1>Brimstone</h1>\\n\\n      <form class=\"new-char\">\\n        <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"Add a new character\">\\n        <select id=\"type\" type=\"text\" name=\"type\"> \\n         <option>Warrior</option>\\n        <option>Mage</option>  \\n        <option>Bowman</option>\\n        <option>Theif</option>\\n        <option>Darkness</option>\\n        </select>\\n        <span class=\"custom-dropdown\">\\n</span>\\n        <button class=\"save\">&plus;</button>\\n      </form>\\n    </header>\\n  '), HTML.DIV({\n    \"class\": \"container\"                                                                                  // 6\n  }, \"\\n    \", HTML.OL(\"\\n      \", Blaze.Each(function() {                                                // 7\n    return Spacebars.call(view.lookup(\"Characters\"));                                                     // 8\n  }, function() {                                                                                         // 9\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"charlist\")), \"\\n      \" ];              // 10\n  }), \"\\n    \"), \"\\n  \") ];                                                                               // 11\n}));                                                                                                      // 12\n                                                                                                          // 13\nTemplate.__checkName(\"charlist\");                                                                         // 14\nTemplate[\"charlist\"] = new Template(\"Template.charlist\", (function() {                                    // 15\n  var view = this;                                                                                        // 16\n  return HTML.LI({                                                                                        // 17\n    \"class\": \"character\"                                                                                  // 18\n  }, \"\\n\", HTML.SPAN({                                                                                    // 19\n    \"class\": \"text\"                                                                                       // 20\n  }, Blaze.View(\"lookup:name\", function() {                                                               // 21\n    return Spacebars.mustache(view.lookup(\"name\"));                                                       // 22\n  })), \"\\n\", HTML.SPAN({                                                                                  // 23\n    \"class\": \"text\"                                                                                       // 24\n  }, Blaze.View(\"lookup:class\", function() {                                                              // 25\n    return Spacebars.mustache(view.lookup(\"class\"));                                                      // 26\n  })), \"\\n\", HTML.SPAN({                                                                                  // 27\n    \"class\": \"text\"                                                                                       // 28\n  }, \"lvl: \", Blaze.View(\"lookup:lvl\", function() {                                                       // 29\n    return Spacebars.mustache(view.lookup(\"lvl\"));                                                        // 30\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n  '));    // 31\n}));                                                                                                      // 32\n                                                                                                          // 33\nTemplate.__checkName(\"charinfo\");                                                                         // 34\nTemplate[\"charinfo\"] = new Template(\"Template.charinfo\", (function() {                                    // 35\n  var view = this;                                                                                        // 36\n  return Spacebars.With(function() {                                                                      // 37\n    return Spacebars.call(view.lookup(\"activeCharacter\"));                                                // 38\n  }, function() {                                                                                         // 39\n    return [ \"\\n\", HTML.BUTTON({                                                                          // 40\n      \"class\": \"back\",                                                                                    // 41\n      name: function() {                                                                                  // 42\n        return Spacebars.mustache(view.lookup(\"name\"));                                                   // 43\n      }                                                                                                   // 44\n    }, HTML.CharRef({                                                                                     // 45\n      html: \"&lt;\",                                                                                       // 46\n      str: \"<\"                                                                                            // 47\n    })), \"\\n\", Spacebars.include(view.lookupTemplate(\"nav\")), \"\\n\", HTML.DIV({                            // 48\n      \"class\": \"table-title\"                                                                              // 49\n    }, \"\\n  \", HTML.H3(Blaze.View(\"lookup:name\", function() {                                             // 50\n      return Spacebars.mustache(view.lookup(\"name\"));                                                     // 51\n    })), \"\\n  \", HTML.DIV({                                                                               // 52\n      \"class\": \"container\"                                                                                // 53\n    }, \"  \\n    \", HTML.DIV({                                                                             // 54\n      \"class\": \"char-info\"                                                                                // 55\n    }, \"  \\n      \", HTML.P({                                                                             // 56\n      name: \"row\"                                                                                         // 57\n    }, \"\\n        \", HTML.SPAN({                                                                          // 58\n      \"class\": \"label\"                                                                                    // 59\n    }, \"Class:\"), \"\\n        \", HTML.SPAN({                                                               // 60\n      \"class\": \"tval\",                                                                                    // 61\n      name: \"name\"                                                                                        // 62\n    }, Blaze.View(\"lookup:class\", function() {                                                            // 63\n      return Spacebars.mustache(view.lookup(\"class\"));                                                    // 64\n    })), \"\\n      \"), \"\\n      \", HTML.P({                                                                // 65\n      name: \"row\"                                                                                         // 66\n    }, \"\\n        \", HTML.SPAN({                                                                          // 67\n      \"class\": \"label\"                                                                                    // 68\n    }, \"lvl:\"), \"\\n        \", HTML.SPAN({                                                                 // 69\n      \"class\": \"tval\",                                                                                    // 70\n      name: \"name\"                                                                                        // 71\n    }, Blaze.View(\"lookup:lvl\", function() {                                                              // 72\n      return Spacebars.mustache(view.lookup(\"lvl\"));                                                      // 73\n    })), \"\\n      \"), \"\\n      \", HTML.P({                                                                // 74\n      name: \"row\"                                                                                         // 75\n    }, \"\\n        \", HTML.SPAN({                                                                          // 76\n      \"class\": \"label\"                                                                                    // 77\n    }, \"Health:\"), \"\\n        \", HTML.SPAN({                                                              // 78\n      \"class\": \"tval\",                                                                                    // 79\n      name: \"name\"                                                                                        // 80\n    }, Blaze.View(\"lookup:health\", function() {                                                           // 81\n      return Spacebars.mustache(view.lookup(\"health\"));                                                   // 82\n    })), \"\\n      \"), \"\\n    \"), \" \\n    \\n  \\n  \"), \"\\n\"), \"\\n\" ];                                       // 83\n  });                                                                                                     // 84\n}));                                                                                                      // 85\n                                                                                                          // 86\nTemplate.__checkName(\"inventoryitem\");                                                                    // 87\nTemplate[\"inventoryitem\"] = new Template(\"Template.inventoryitem\", (function() {                          // 88\n  var view = this;                                                                                        // 89\n  return HTML.LI({                                                                                        // 90\n    \"class\": \"item\"                                                                                       // 91\n  }, \"\\n\", HTML.SPAN({                                                                                    // 92\n    \"class\": \"text\"                                                                                       // 93\n  }, \"Name: \", Blaze.View(\"lookup:name\", function() {                                                     // 94\n    return Spacebars.mustache(view.lookup(\"name\"));                                                       // 95\n  })), \"\\n\", HTML.P(\"\\n\", HTML.SPAN({                                                                     // 96\n    \"class\": \"text\"                                                                                       // 97\n  }, \"Key Words: \", Blaze.View(\"lookup:keys\", function() {                                                // 98\n    return Spacebars.mustache(view.lookup(\"keys\"));                                                       // 99\n  })), \"\\n\", HTML.SPAN({                                                                                  // 100\n    \"class\": \"text\"                                                                                       // 101\n  }, \"Upgrade Slots: \", Blaze.View(\"lookup:upgradeSlots\", function() {                                    // 102\n    return Spacebars.mustache(view.lookup(\"upgradeSlots\"));                                               // 103\n  })), \"\\n\", HTML.SPAN({                                                                                  // 104\n    \"class\": \"text\"                                                                                       // 105\n  }, \"Weight: \", Blaze.View(\"lookup:weight\", function() {                                                 // 106\n    return Spacebars.mustache(view.lookup(\"weight\"));                                                     // 107\n  })), \"\\n\", HTML.SPAN({                                                                                  // 108\n    \"class\": \"text\"                                                                                       // 109\n  }, \"Value: \", Blaze.View(\"lookup:value\", function() {                                                   // 110\n    return Spacebars.mustache(view.lookup(\"value\"));                                                      // 111\n  })), \"\\n\"), \"\\n\", HTML.P({                                                                              // 112\n    \"class\": \"text\"                                                                                       // 113\n  }, \"Description: \", Blaze.View(\"lookup:desc\", function() {                                              // 114\n    return Spacebars.mustache(view.lookup(\"desc\"));                                                       // 115\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n'));      // 116\n}));                                                                                                      // 117\n                                                                                                          // 118\nTemplate.__checkName(\"nav\");                                                                              // 119\nTemplate[\"nav\"] = new Template(\"Template.nav\", (function() {                                              // 120\n  var view = this;                                                                                        // 121\n  return HTML.Raw('<div>\\n  <a href=\"#1\">Hero Details</a>\\n  <a href=\"/Equipment\">Equipment</a>\\n  <a href=\"#3\">Sidebag</a>\\n  <a href=\"#4\">Extras</a>\\n  <a href=\"#5\">effects</a>\\n  <a href=\"#6\">Abilities</a>\\n</div>');\n}));                                                                                                      // 123\n                                                                                                          // 124\nTemplate.__checkName(\"Equipment\");                                                                        // 125\nTemplate[\"Equipment\"] = new Template(\"Template.Equipment\", (function() {                                  // 126\n  var view = this;                                                                                        // 127\n  return [ Spacebars.With(function() {                                                                    // 128\n    return Spacebars.call(view.lookup(\"inventory\"));                                                      // 129\n  }, function() {                                                                                         // 130\n    return [ \"\\n\", HTML.DIR({                                                                             // 131\n      \"class\": \"inventoryView\"                                                                            // 132\n    }, \"\\n    \", HTML.H3(\"Inventory \", HTML.BUTTON({                                                      // 133\n      \"class\": \"newitem\"                                                                                  // 134\n    }, HTML.CharRef({                                                                                     // 135\n      html: \"&plus;\",                                                                                     // 136\n      str: \"+\"                                                                                            // 137\n    }), \" New Item\")), \"\\n\\n      \", HTML.UL(\"\\n          \", Blaze.Each(function() {                      // 138\n      return Spacebars.call(view.lookup(\"inventory\"));                                                    // 139\n    }, function() {                                                                                       // 140\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"inventoryitem\")), \"\\n          \" ];\n    }), \"\\n      \"), \"\\n    \"), \"\\n    \" ];                                                               // 142\n  }), HTML.Raw('\\n <!--    {{#with itemWeight}}\\n    <p id=\"weight\">{{this}}</p>\\n    {{/with}} -->') ];  // 143\n}));                                                                                                      // 144\n                                                                                                          // 145\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"char-list.js\":[\"meteor/templating\",\"../api/brimChar.js\",\"./char-list.html\",function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// imports/ui/char-list.js                                                                                //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nvar _templating = require('meteor/templating');                                                           // 1\n                                                                                                          //\nvar _brimChar = require('../api/brimChar.js');                                                            // 2\n                                                                                                          //\nrequire('./char-list.html');                                                                              // 5\n                                                                                                          //\n// # Destroy old editable if it exists                                                                    //\n                                                                                                          //\n_templating.Template.main.helpers({ //try clist                                                           // 14\n                                                                                                          //\n  Characters: function () {                                                                               // 15\n    function Characters() {                                                                               //\n      return _brimChar.Characters.find({}, { sort: { createdAt: +1 } });                                  // 16\n    }                                                                                                     //\n                                                                                                          //\n    return Characters;                                                                                    //\n  }()                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n_templating.Template.main.events({                                                                        // 20\n  'click .clear': function () {                                                                           // 22\n    function clickClear() {}                                                                              //\n                                                                                                          //\n    return clickClear;                                                                                    //\n  }(),                                                                                                    //\n  'click .save': function () {                                                                            // 26\n    function clickSave(event) {                                                                           //\n      //prevent defaulting submit                                                                         //\n      event.preventDefault();                                                                             // 28\n                                                                                                          //\n      var name = document.getElementById('name').value;                                                   // 30\n      var type = document.getElementById('type').value;                                                   // 31\n      //const type = target.type.value;                                                                   //\n      var tempCharacter = new person(name, type);                                                         // 26\n      // var tempInv = new invBuild();                                                                    //\n                                                                                                          //\n      // inventorydb.insert({                                                                             //\n      //   owner: name,                                                                                   //\n      //   createdAt: new Date(),                                                                         //\n      //   name: \"item\",                                                                                  //\n                                                                                                          //\n      // });                                                                                              //\n      //Insert new char data to collection characters (in brimChar.js)                                    //\n      _brimChar.Characters.insert(tempCharacter, {                                                        // 26\n        // name: tex                                                                                      //\n        // createdAt: new Date(),                                                                         //\n      });                                                                                                 //\n                                                                                                          //\n      alert(\"Your Character: \" + name + \" has been saved!\");                                              // 48\n                                                                                                          //\n      //clear name from input                                                                             //\n      // target.name.value = '';                                                                          //\n      //target.class.value = '';                                                                          //\n                                                                                                          //\n      //alert(tempCharacter.getInfo());                                                                   //\n      document.getElementById('name').value = \"\";                                                         // 26\n    }                                                                                                     //\n                                                                                                          //\n    return clickSave;                                                                                     //\n  }()                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n_templating.Template.charlist.helpers({                                                                   // 61\n  // tempchar() {                                                                                         //\n  //  \treturn Characters.findOne({name});                                                                 //\n  //  },                                                                                                  //\n});                                                                                                       //\n                                                                                                          //\n_templating.Template.charlist.events({                                                                    // 67\n  // 'click .toggle-checked'() {                                                                          //\n  //   // Set the checked property to the opposite of its current value                                   //\n  //   Tasks.update(this._id, {                                                                           //\n  //     $set: { checked: ! this.checked },                                                               //\n  //   });                                                                                                //\n  // },                                                                                                   //\n                                                                                                          //\n  'click .delete': function () {                                                                          // 74\n    function clickDelete() {                                                                              //\n                                                                                                          //\n      _brimChar.Characters.remove(this._id);                                                              // 76\n    }                                                                                                     //\n                                                                                                          //\n    return clickDelete;                                                                                   //\n  }(),                                                                                                    //\n  'click .edit': function () {                                                                            // 79\n    function clickEdit() {                                                                                //\n                                                                                                          //\n      _brimChar.Characters.update(this._id, {                                                             // 81\n        $set: { activeChar: true }                                                                        // 82\n      });                                                                                                 //\n                                                                                                          //\n      FlowRouter.go('/Details');                                                                          // 85\n    }                                                                                                     //\n                                                                                                          //\n    return clickEdit;                                                                                     //\n  }()                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n_templating.Template.charinfo.onCreated(function () {                                                     // 89\n  var self = this;                                                                                        // 90\n  self.autorun(function () {                                                                              // 91\n    self.subscribe('Characters');                                                                         // 92\n  });                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n_templating.Template.charinfo.helpers({                                                                   // 96\n  activeCharacter: function () {                                                                          // 98\n    function activeCharacter() {                                                                          //\n      var output;                                                                                         // 99\n      var cursor = _brimChar.Characters.find();                                                           // 100\n      cursor.forEach(function (doc) {                                                                     // 101\n        if (doc.activeChar == true) {                                                                     // 102\n          output = doc;                                                                                   // 103\n        }                                                                                                 //\n      });                                                                                                 //\n      return output;                                                                                      // 106\n    }                                                                                                     //\n                                                                                                          //\n    return activeCharacter;                                                                               //\n  }()                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n// inventory() {                                                                                          //\n//  var char = activeCharacter();                                                                         //\n//  var inv = inventorydb.find({owner: this._id});                                                        //\n//  return inv;                                                                                           //\n// },                                                                                                     //\n                                                                                                          //\n// returns all keys and props of object                                                                   //\n// activeAtt() {                                                                                          //\n//  var atts = [];                                                                                        //\n//  var char = activeCharacter();                                                                         //\n//  for (var key in char) {                                                                               //\n//    var obj = char[key];                                                                                //\n//    for (var prop in obj) {                                                                             //\n//      atts.push({key : key, prop: prop});                                                               //\n//    };                                                                                                  //\n//  };                                                                                                    //\n//  return atts;                                                                                          //\n// },                                                                                                     //\n                                                                                                          //\n_templating.Template.charinfo.events({                                                                    // 131\n  'click .back': function () {                                                                            // 133\n    function clickBack() {                                                                                //\n      _brimChar.Characters.update(this._id, {                                                             // 134\n        $set: { activeChar: false }                                                                       // 135\n      });                                                                                                 //\n      FlowRouter.go('home');                                                                              // 137\n    }                                                                                                     //\n                                                                                                          //\n    return clickBack;                                                                                     //\n  }()                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n// 'click td'(event) {                                                                                    //\n//   var target = event.target;                                                                           //\n//   var self = target.innerHTML;                                                                         //\n//   var res = prompt('new val');                                                                         //\n                                                                                                          //\n//    Characters.update(this._id,{                                                                        //\n                                                                                                          //\n//    });                                                                                                 //\n// },                                                                                                     //\n                                                                                                          //\n_templating.Template.inventoryitem.helpers({});                                                           // 154\n                                                                                                          //\n_templating.Template.inventoryitem.events({                                                               // 158\n  'click .delete': function () {                                                                          // 160\n    function clickDelete() {                                                                              //\n                                                                                                          //\n      _brimChar.inventorydb.remove(this._id);                                                             // 162\n                                                                                                          //\n      // Characters.update(this._id, {                                                                    //\n      //       $set: {activeChar: false},                                                                 //\n      // });                                                                                              //\n    }                                                                                                     // 160\n                                                                                                          //\n    return clickDelete;                                                                                   //\n  }()                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n_templating.Template.Equipment.helpers({                                                                  // 171\n  inventory: function () {                                                                                // 172\n    function inventory() {                                                                                //\n                                                                                                          //\n      var char = activeCharacter();                                                                       // 174\n      var inv = _brimChar.inventorydb.find({ owner: this._id });                                          // 175\n      return inv;                                                                                         // 176\n    }                                                                                                     //\n                                                                                                          //\n    return inventory;                                                                                     //\n  }(),                                                                                                    //\n  itemWeight: function () {                                                                               // 179\n    function itemWeight() {                                                                               //\n      var count = 0;                                                                                      // 180\n      var char = activeCharacter();                                                                       // 181\n      // var inv = inventorydb.find({owner: this._id});                                                   //\n                                                                                                          //\n      // for (var items in inv) {                                                                         //\n      //   count += inv[items].weight;                                                                    //\n      //   alert(inv[items].weight);                                                                      //\n      // }                                                                                                //\n      //  return count;                                                                                   //\n      return char.maxWeight;                                                                              // 179\n    }                                                                                                     //\n                                                                                                          //\n    return itemWeight;                                                                                    //\n  }()                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n_templating.Template.Equipment.events({                                                                   // 194\n  'click .newitem': function () {                                                                         // 195\n    function clickNewitem() {                                                                             //\n                                                                                                          //\n      var itemName = prompt(\"item name?\");                                                                // 197\n      var slots = prompt(\"how many upgrade slots?\");                                                      // 198\n      var weight = prompt(\"weight of \" + itemName + \"?\");                                                 // 199\n      var val = prompt(\"worth of \" + itemName + \"?\");                                                     // 200\n      var desc = prompt(\"Describe \" + itemName + \":\");                                                    // 201\n      var itemres = basicInv(this._id, itemName, slots, weight, val, desc);                               // 202\n      _brimChar.inventorydb.insert(itemres, {});                                                          // 203\n    }                                                                                                     //\n                                                                                                          //\n    return clickNewitem;                                                                                  //\n  }()                                                                                                     //\n});                                                                                                       //\n                                                                                                          //\n// Classes and functions                                                                                  //\n                                                                                                          //\nfunction person(name, type) {                                                                             // 211\n  // var invBuild = invBuild();                                                                           //\n  var doc = {                                                                                             // 213\n    name: name,                                                                                           // 214\n    'class': type,                                                                                        // 215\n    lvl: 1,                                                                                               // 216\n    inventory: name,                                                                                      // 217\n    agility: 1,                                                                                           // 218\n    strength: 1,                                                                                          // 219\n    health: 10,                                                                                           // 220\n    defense: 5,                                                                                           // 221\n    armor: 0,                                                                                             // 222\n    cunning: 0,                                                                                           // 223\n    lore: 0,                                                                                              // 224\n    sanity: 0,                                                                                            // 225\n    willpower: 0,                                                                                         // 226\n    Sarmor: 0,                                                                                            // 227\n    spirit: 0,                                                                                            // 228\n    luck: 0,                                                                                              // 229\n    melee: 0,                                                                                             // 230\n    combat: 0,                                                                                            // 231\n    range: 0,                                                                                             // 232\n    maxGrit: 0,                                                                                           // 233\n    initiative: 0,                                                                                        // 234\n    corruption: 1,                                                                                        // 235\n    darkStone: 0,                                                                                         // 236\n    maxWeight: 10,                                                                                        // 237\n    gold: 100,                                                                                            // 238\n    exp: 1000,                                                                                            // 239\n    move: 1                                                                                               // 240\n  };                                                                                                      //\n  return doc;                                                                                             // 242\n}                                                                                                         //\n                                                                                                          //\nfunction basicInv(owner, name, slots, weight, val, desc) {                                                // 245\n  var item = {                                                                                            // 246\n    owner: owner,                                                                                         // 247\n    name: name,                                                                                           // 248\n    type: \"equipment\",                                                                                    // 249\n    keys: \"item\",                                                                                         // 250\n    upgradeSlots: slots,                                                                                  // 251\n    weight: weight,                                                                                       // 252\n    value: val,                                                                                           // 253\n    desc: desc                                                                                            // 254\n  };                                                                                                      //\n  return item;                                                                                            // 256\n};                                                                                                        //\n                                                                                                          //\n// function invBuild() {                                                                                  //\n//   var item1 = new basicInv(this._id,\"Mr. Sword\");                                                      //\n//   var item2 = new basicInv(this._id,\"Shield\");                                                         //\n//   var item3 = new basicInv(this._id,\"Dagger\");                                                         //\n//   var arr = [item1,item2,item3];                                                                       //\n//   return arr;                                                                                          //\n// };                                                                                                     //\n                                                                                                          //\nfunction activeCharacter() {                                                                              // 267\n  var output;                                                                                             // 268\n  var cursor = _brimChar.Characters.find();                                                               // 269\n  cursor.forEach(function (doc) {                                                                         // 270\n    if (doc.activeChar == true) {                                                                         // 271\n      output = doc;                                                                                       // 272\n    }                                                                                                     //\n  });                                                                                                     //\n  return output;                                                                                          // 275\n};                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"api\":{\"brimChar.js\":[\"meteor/mongo\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// imports/api/brimChar.js                                                                                //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nexports.__esModule = true;                                                                                //\nexports.sidebagdb = exports.inventorydb = exports.Characters = undefined;                                 //\n                                                                                                          //\nvar _mongo = require('meteor/mongo');                                                                     // 1\n                                                                                                          //\nvar Characters = exports.Characters = new _mongo.Mongo.Collection('characters');                          // 3\nvar inventorydb = exports.inventorydb = new _mongo.Mongo.Collection('inventory');                         // 4\nvar sidebagdb = exports.sidebagdb = new _mongo.Mongo.Collection('sidebag');                               // 5\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"lib\":{\"routes.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// lib/routes.js                                                                                          //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nFlowRouter.route('/', {                                                                                   // 1\n\tname: 'home',                                                                                            // 2\n\taction: function () {                                                                                    // 3\n\t\tfunction action() {                                                                                     //\n\t\t\tBlazeLayout.render('main');                                                                            // 4\n\t\t}                                                                                                       //\n                                                                                                          //\n\t\treturn action;                                                                                          //\n\t}()                                                                                                      //\n});                                                                                                       //\n                                                                                                          //\nFlowRouter.route('/Details', {                                                                            // 9\n\tname: 'Details',                                                                                         // 10\n\taction: function () {                                                                                    // 11\n\t\tfunction action() {                                                                                     //\n\t\t\tBlazeLayout.render('charinfo');                                                                        // 12\n\t\t}                                                                                                       //\n                                                                                                          //\n\t\treturn action;                                                                                          //\n\t}()                                                                                                      //\n});                                                                                                       //\n                                                                                                          //\nFlowRouter.route('/Equipment', {                                                                          // 17\n\tname: 'Equipment',                                                                                       // 18\n\taction: function () {                                                                                    // 19\n\t\tfunction action() {                                                                                     //\n\t\t\tBlazeLayout.render('Equipment');                                                                       // 20\n\t\t}                                                                                                       //\n                                                                                                          //\n\t\treturn action;                                                                                          //\n\t}()                                                                                                      //\n});                                                                                                       //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"client\":{\"main.js\":[\"../imports/ui/char-list.js\",function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// client/main.js                                                                                         //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nrequire('../imports/ui/char-list.js');                                                                    // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./lib/routes.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/char-list.html","/imports/ui/template.char-list.js","/imports/ui/char-list.js","/imports/api/brimChar.js","/lib/routes.js","/client/main.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA,8G;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gH;;;;;;;;;;;AChJA;;AACA;;AAGA;;;;AASA,qBAAS,IAAT,CAAc,OAAd,CAAsB;;AACpB;0BAAa;AACX,aAAO,qBAAW,IAAX,CAAgB,EAAhB,EAAoB,EAAE,MAAM,EAAE,WAAW,CAAC,CAAD,EAAnB,EAAtB,CAAP,CADW;;;;KADO;CAAtB;;AAMA,qBAAS,IAAT,CAAc,MAAd,CAAqB;AAEnB;0BAAiB;;;KAFE;AAMnB;uBAAc,OAAO;;AAEnB,YAAM,cAAN,GAFmB;;AAInB,UAAM,OAAO,SAAS,cAAT,CAAwB,MAAxB,EAAgC,KAAhC,CAJM;AAKnB,UAAM,OAAO,SAAS,cAAT,CAAwB,MAAxB,EAAgC,KAAhC;;AALM,UAOf,gBAAgB,IAAI,MAAJ,CAAW,IAAX,EAAgB,IAAhB,CAAhB;;;;;;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","file":"/app.js","sourcesContent":["module.exports = require(\"./template.char-list.js\");\n","\nTemplate.__checkName(\"main\");\nTemplate[\"main\"] = new Template(\"Template.main\", (function() {\n  var view = this;\n  return [ HTML.Raw('<header>\\n      <h1>Brimstone</h1>\\n\\n      <form class=\"new-char\">\\n        <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"Add a new character\">\\n        <select id=\"type\" type=\"text\" name=\"type\"> \\n         <option>Warrior</option>\\n        <option>Mage</option>  \\n        <option>Bowman</option>\\n        <option>Theif</option>\\n        <option>Darkness</option>\\n        </select>\\n        <span class=\"custom-dropdown\">\\n</span>\\n        <button class=\"save\">&plus;</button>\\n      </form>\\n    </header>\\n  '), HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n    \", HTML.OL(\"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"Characters\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"charlist\")), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \") ];\n}));\n\nTemplate.__checkName(\"charlist\");\nTemplate[\"charlist\"] = new Template(\"Template.charlist\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": \"character\"\n  }, \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, Blaze.View(\"lookup:class\", function() {\n    return Spacebars.mustache(view.lookup(\"class\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"lvl: \", Blaze.View(\"lookup:lvl\", function() {\n    return Spacebars.mustache(view.lookup(\"lvl\"));\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n  '));\n}));\n\nTemplate.__checkName(\"charinfo\");\nTemplate[\"charinfo\"] = new Template(\"Template.charinfo\", (function() {\n  var view = this;\n  return Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"activeCharacter\"));\n  }, function() {\n    return [ \"\\n\", HTML.BUTTON({\n      \"class\": \"back\",\n      name: function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }\n    }, HTML.CharRef({\n      html: \"&lt;\",\n      str: \"<\"\n    })), \"\\n\", Spacebars.include(view.lookupTemplate(\"nav\")), \"\\n\", HTML.DIV({\n      \"class\": \"table-title\"\n    }, \"\\n  \", HTML.H3(Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    })), \"\\n  \", HTML.DIV({\n      \"class\": \"container\"\n    }, \"  \\n    \", HTML.DIV({\n      \"class\": \"char-info\"\n    }, \"  \\n      \", HTML.P({\n      name: \"row\"\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"label\"\n    }, \"Class:\"), \"\\n        \", HTML.SPAN({\n      \"class\": \"tval\",\n      name: \"name\"\n    }, Blaze.View(\"lookup:class\", function() {\n      return Spacebars.mustache(view.lookup(\"class\"));\n    })), \"\\n      \"), \"\\n      \", HTML.P({\n      name: \"row\"\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"label\"\n    }, \"lvl:\"), \"\\n        \", HTML.SPAN({\n      \"class\": \"tval\",\n      name: \"name\"\n    }, Blaze.View(\"lookup:lvl\", function() {\n      return Spacebars.mustache(view.lookup(\"lvl\"));\n    })), \"\\n      \"), \"\\n      \", HTML.P({\n      name: \"row\"\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"label\"\n    }, \"Health:\"), \"\\n        \", HTML.SPAN({\n      \"class\": \"tval\",\n      name: \"name\"\n    }, Blaze.View(\"lookup:health\", function() {\n      return Spacebars.mustache(view.lookup(\"health\"));\n    })), \"\\n      \"), \"\\n    \"), \" \\n    \\n  \\n  \"), \"\\n\"), \"\\n\" ];\n  });\n}));\n\nTemplate.__checkName(\"inventoryitem\");\nTemplate[\"inventoryitem\"] = new Template(\"Template.inventoryitem\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": \"item\"\n  }, \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Name: \", Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \"\\n\", HTML.P(\"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Key Words: \", Blaze.View(\"lookup:keys\", function() {\n    return Spacebars.mustache(view.lookup(\"keys\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Upgrade Slots: \", Blaze.View(\"lookup:upgradeSlots\", function() {\n    return Spacebars.mustache(view.lookup(\"upgradeSlots\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Weight: \", Blaze.View(\"lookup:weight\", function() {\n    return Spacebars.mustache(view.lookup(\"weight\"));\n  })), \"\\n\", HTML.SPAN({\n    \"class\": \"text\"\n  }, \"Value: \", Blaze.View(\"lookup:value\", function() {\n    return Spacebars.mustache(view.lookup(\"value\"));\n  })), \"\\n\"), \"\\n\", HTML.P({\n    \"class\": \"text\"\n  }, \"Description: \", Blaze.View(\"lookup:desc\", function() {\n    return Spacebars.mustache(view.lookup(\"desc\"));\n  })), HTML.Raw('\\n<button class=\"edit\">EDIT</button>\\n<button class=\"delete\">&times;</button>\\n'));\n}));\n\nTemplate.__checkName(\"nav\");\nTemplate[\"nav\"] = new Template(\"Template.nav\", (function() {\n  var view = this;\n  return HTML.Raw('<div>\\n  <a href=\"#1\">Hero Details</a>\\n  <a href=\"/Equipment\">Equipment</a>\\n  <a href=\"#3\">Sidebag</a>\\n  <a href=\"#4\">Extras</a>\\n  <a href=\"#5\">effects</a>\\n  <a href=\"#6\">Abilities</a>\\n</div>');\n}));\n\nTemplate.__checkName(\"Equipment\");\nTemplate[\"Equipment\"] = new Template(\"Template.Equipment\", (function() {\n  var view = this;\n  return [ Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"inventory\"));\n  }, function() {\n    return [ \"\\n\", HTML.DIR({\n      \"class\": \"inventoryView\"\n    }, \"\\n    \", HTML.H3(\"Inventory \", HTML.BUTTON({\n      \"class\": \"newitem\"\n    }, HTML.CharRef({\n      html: \"&plus;\",\n      str: \"+\"\n    }), \" New Item\")), \"\\n\\n      \", HTML.UL(\"\\n          \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"inventory\"));\n    }, function() {\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"inventoryitem\")), \"\\n          \" ];\n    }), \"\\n      \"), \"\\n    \"), \"\\n    \" ];\n  }), HTML.Raw('\\n <!--    {{#with itemWeight}}\\n    <p id=\"weight\">{{this}}</p>\\n    {{/with}} -->') ];\n}));\n","import { Template } from 'meteor/templating';\nimport { Characters } from '../api/brimChar.js';\nimport { inventorydb } from '../api/brimChar.js';\n \nimport './char-list.html';\n\n\n  \n\n    // # Destroy old editable if it exists\n    \n\n\nTemplate.main.helpers({ //try clist\n  Characters() {\n    return Characters.find({}, { sort: { createdAt: +1 } });\n  },\n});\n\nTemplate.main.events({\n\n  'click .clear' (){\n\n  },\n\n  'click .save'(event) {\n    //prevent defaulting submit\n    event.preventDefault();\n\n    const name = document.getElementById('name').value;\n    const type = document.getElementById('type').value;\n    //const type = target.type.value;\n    var tempCharacter = new person(name,type);\n    // var tempInv = new invBuild();\n\n    // inventorydb.insert({\n    //   owner: name,\n    //   createdAt: new Date(),\n    //   name: \"item\",\n      \n    // });\n    //Insert new char data to collection characters (in brimChar.js)\n    Characters.insert(tempCharacter,{ \n      // name: tex\n      // createdAt: new Date(),\n    });\n\n    alert(\"Your Character: \" + name + \" has been saved!\");\n\n    //clear name from input\n   // target.name.value = '';\n    //target.class.value = '';\n\n    //alert(tempCharacter.getInfo());\n    document.getElementById('name').value = \"\";\n\n\n  },\n});\n\nTemplate.charlist.helpers({\n\t// tempchar() {\n //  \treturn Characters.findOne({name});\n //  },\n});\n\nTemplate.charlist.events({\n  // 'click .toggle-checked'() {\n  //   // Set the checked property to the opposite of its current value\n  //   Tasks.update(this._id, {\n  //     $set: { checked: ! this.checked },\n  //   });\n  // },\n  'click .delete'() {\n\n    Characters.remove(this._id);\n  },\n\n  'click .edit'() {\n\n    Characters.update(this._id, {\n      $set: {activeChar: true},\n    });\n\n  \tFlowRouter.go('/Details');\n  },\n});\n\nTemplate.charinfo.onCreated(function() {\n  var self = this;\n  self.autorun(function () {\n    self.subscribe('Characters');\n  });\n});\n\nTemplate.charinfo.helpers({\n\n activeCharacter(){\n  var output;\n  var cursor = Characters.find();\n  cursor.forEach(function(doc){\n    if (doc.activeChar == true) {\n      output = doc;\n    }\n  });\n  return output;\n   },\n\n   // inventory() {\n   //  var char = activeCharacter();\n   //  var inv = inventorydb.find({owner: this._id});\n   //  return inv;\n   // },\n\n// returns all keys and props of object\n   // activeAtt() {\n   //  var atts = [];\n   //  var char = activeCharacter();\n   //  for (var key in char) {\n   //    var obj = char[key];\n   //    for (var prop in obj) {\n   //      atts.push({key : key, prop: prop});\n   //    };\n   //  };\n   //  return atts;\n   // },\n\n\n});\n\nTemplate.charinfo.events({\n\n  'click .back'(){\n  Characters.update(this._id, {\n        $set: {activeChar: false},\n      });\n  FlowRouter.go('home');\n  },\n  \n\n  // 'click td'(event) {\n  //   var target = event.target;\n  //   var self = target.innerHTML;\n  //   var res = prompt('new val');\n\n  //    Characters.update(this._id,{\n\n  //    });\n  // },\n  \n});\n\n\nTemplate.inventoryitem.helpers({\n\n});\n\nTemplate.inventoryitem.events({\n\n  'click .delete'(){\n\n    inventorydb.remove(this._id);\n\n  // Characters.update(this._id, {\n  //       $set: {activeChar: false},\n      // });\n    },\n});\n\n\nTemplate.Equipment.helpers({\n  inventory() {\n    \n    var char = activeCharacter();\n    var inv = inventorydb.find({owner: this._id});\n    return inv;\n\n   },\n   itemWeight() {\n    var count = 0;\n    var char = activeCharacter();\n    // var inv = inventorydb.find({owner: this._id});\n\n    // for (var items in inv) {\n    //   count += inv[items].weight;\n    //   alert(inv[items].weight);\n    // }\n    //  return count;\n    return char.maxWeight;\n   },\n\n});\n\nTemplate.Equipment.events({\n  'click .newitem'(){\n\n    var itemName = prompt(\"item name?\");\n    var slots = prompt(\"how many upgrade slots?\");\n    var weight = prompt(\"weight of \" + itemName + \"?\");\n    var val = prompt(\"worth of \" + itemName + \"?\");\n    var desc = prompt(\"Describe \" + itemName + \":\");\n    var itemres = basicInv(this._id,itemName,slots,weight,val,desc);\n    inventorydb.insert(itemres,{\n\n    });\n  },\n});\n\n// Classes and functions\n\nfunction person(name, type) {\n  // var invBuild = invBuild();\n  var doc = {\n    name: name,\n    class: type,\n    lvl: 1,\n    inventory: name,\n    agility: 1,\n    strength: 1,\n    health: 10,\n    defense: 5,\n    armor: 0,\n    cunning: 0,\n    lore: 0,\n    sanity: 0,\n    willpower: 0,\n    Sarmor: 0,\n    spirit: 0,\n    luck: 0,\n    melee: 0,\n    combat: 0,\n    range: 0,\n    maxGrit: 0,\n    initiative: 0,\n    corruption: 1,\n    darkStone: 0,\n    maxWeight: 10,\n    gold: 100,\n    exp: 1000,\n    move: 1,\n  }\n  return doc;\n}\n\nfunction basicInv(owner,name,slots,weight,val,desc)  {\n   var item = {\n    owner: owner,\n    name: name,\n    type: \"equipment\",\n    keys: \"item\",\n    upgradeSlots:  slots,\n    weight: weight,\n    value: val,\n    desc: desc,\n  }\n  return item;\n};\n\n// function invBuild() {\n//   var item1 = new basicInv(this._id,\"Mr. Sword\");\n//   var item2 = new basicInv(this._id,\"Shield\");\n//   var item3 = new basicInv(this._id,\"Dagger\");\n//   var arr = [item1,item2,item3];\n//   return arr;\n// };\n\nfunction activeCharacter(){\n  var output;\n  var cursor = Characters.find();\n  cursor.forEach(function(doc){\n    if (doc.activeChar == true) {\n      output = doc;\n    }\n  });\n  return output;\n   };\n","import { Mongo } from 'meteor/mongo';\n\nexport const Characters = new Mongo.Collection('characters');\nexport const inventorydb = new Mongo.Collection('inventory');\nexport const sidebagdb = new Mongo.Collection('sidebag');","FlowRouter.route('/',{\n\tname: 'home',\n\taction() {\n\t\tBlazeLayout.render('main');\n\t}\n\n});\n\nFlowRouter.route('/Details',{\n\tname: 'Details',\n\taction() {\n\t\tBlazeLayout.render('charinfo');\n\t}\n\n});\n\nFlowRouter.route('/Equipment',{\n\tname: 'Equipment',\n\taction() {\n\t\tBlazeLayout.render('Equipment');\n\t}\n\n});","import '../imports/ui/char-list.js';"]}}]