[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/amdingo_bootstrap-duallistbox/packages/amdingo_bootstrap //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n(function () {                                                       // 1\n                                                                     // 2\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/amdingo:bootstrap-duallistbox/package/jquery.bootstrap-duallistbox.js                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n;(function ($, window, document, undefined) {                                                                        // 1\n    // Create the defaults once                                                                                      // 2\n    var pluginName = 'bootstrapDualListbox',                                                                         // 3\n        defaults = {                                                                                                 // 4\n            bootstrap2Compatible: false,                                                                             // 5\n            filterTextClear: 'show all',                                                                             // 6\n            filterPlaceHolder: 'Filter',                                                                             // 7\n            moveSelectedLabel: 'Move selected',                                                                      // 8\n            moveAllLabel: 'Move all',                                                                                // 9\n            removeSelectedLabel: 'Remove selected',                                                                  // 10\n            removeAllLabel: 'Remove all',                                                                            // 11\n            moveOnSelect: true,                                                                 // true/false (forced true on androids, see the comment later)\n            preserveSelectionOnMove: false,                                                     // 'all' / 'moved' / false\n            selectedListLabel: false,                                                           // 'string', false   // 14\n            nonSelectedListLabel: false,                                                        // 'string', false   // 15\n            helperSelectNamePostfix: '_helper',                                                 // 'string_of_postfix' / false\n            selectorMinimalHeight: 100,                                                                              // 17\n            showFilterInputs: true,                                                             // whether to show filter inputs\n            nonSelectedFilter: '',                                                              // string, filter the non selected options\n            selectedFilter: '',                                                                 // string, filter the selected options\n            infoText: 'Showing all {0}',                                                        // text when all options are visible / false for no info text\n            infoTextFiltered: '<span class=\"label label-warning\">Filtered</span> {0} from {1}', // when not all of the options are visible due to the filter\n            infoTextEmpty: 'Empty list',                                                        // when there are no options present in the list\n            filterOnValues: false                                                               // filter by selector's values, boolean\n        },                                                                                                           // 25\n    // Selections are invisible on android if the containing select is styled with CSS                               // 26\n    // http://code.google.com/p/android/issues/detail?id=16922                                                       // 27\n        isBuggyAndroid = /android/i.test(navigator.userAgent.toLowerCase());                                         // 28\n                                                                                                                     // 29\n    // The actual plugin constructor                                                                                 // 30\n    function BootstrapDualListbox(element, options) {                                                                // 31\n        this.element = $(element);                                                                                   // 32\n        // jQuery has an extend method which merges the contents of two or                                           // 33\n        // more objects, storing the result in the first object. The first object                                    // 34\n        // is generally empty as we don't want to alter the default options for                                      // 35\n        // future instances of the plugin                                                                            // 36\n        this.settings = $.extend({}, defaults, options);                                                             // 37\n        this._defaults = defaults;                                                                                   // 38\n        this._name = pluginName;                                                                                     // 39\n        this.init();                                                                                                 // 40\n    }                                                                                                                // 41\n                                                                                                                     // 42\n    function triggerChangeEvent(dualListbox) {                                                                       // 43\n        dualListbox.element.trigger('change');                                                                       // 44\n    }                                                                                                                // 45\n                                                                                                                     // 46\n    function updateSelectionStates(dualListbox) {                                                                    // 47\n        dualListbox.element.find('option').each(function(index, item) {                                              // 48\n            var $item = $(item);                                                                                     // 49\n            if (typeof($item.data('original-index')) === 'undefined') {                                              // 50\n                $item.data('original-index', dualListbox.elementCount++);                                            // 51\n            }                                                                                                        // 52\n            if (typeof($item.data('_selected')) === 'undefined') {                                                   // 53\n                $item.data('_selected', false);                                                                      // 54\n            }                                                                                                        // 55\n        });                                                                                                          // 56\n    }                                                                                                                // 57\n                                                                                                                     // 58\n    function changeSelectionState(dualListbox, original_index, selected) {                                           // 59\n        dualListbox.element.find('option').each(function(index, item) {                                              // 60\n            var $item = $(item);                                                                                     // 61\n            if ($item.data('original-index') === original_index) {                                                   // 62\n                $item.prop('selected', selected);                                                                    // 63\n            }                                                                                                        // 64\n        });                                                                                                          // 65\n    }                                                                                                                // 66\n                                                                                                                     // 67\n    function formatString(s, args) {                                                                                 // 68\n        return s.replace(/\\{(\\d+)\\}/g, function(match, number) {                                                     // 69\n            return typeof args[number] !== 'undefined' ? args[number] : match;                                       // 70\n        });                                                                                                          // 71\n    }                                                                                                                // 72\n                                                                                                                     // 73\n    function refreshInfo(dualListbox) {                                                                              // 74\n        if (!dualListbox.settings.infoText) {                                                                        // 75\n            return;                                                                                                  // 76\n        }                                                                                                            // 77\n                                                                                                                     // 78\n        var visible1 = dualListbox.elements.select1.find('option').length,                                           // 79\n            visible2 = dualListbox.elements.select2.find('option').length,                                           // 80\n            all1 = dualListbox.element.find('option').length - dualListbox.selectedElements,                         // 81\n            all2 = dualListbox.selectedElements,                                                                     // 82\n            content = '';                                                                                            // 83\n                                                                                                                     // 84\n        if (all1 === 0) {                                                                                            // 85\n            content = dualListbox.settings.infoTextEmpty;                                                            // 86\n        } else if (visible1 === all1) {                                                                              // 87\n            content = formatString(dualListbox.settings.infoText, [visible1, all1]);                                 // 88\n        } else {                                                                                                     // 89\n            content = formatString(dualListbox.settings.infoTextFiltered, [visible1, all1]);                         // 90\n        }                                                                                                            // 91\n                                                                                                                     // 92\n        dualListbox.elements.info1.html(content);                                                                    // 93\n        dualListbox.elements.box1.toggleClass('filtered', !(visible1 === all1 || all1 === 0));                       // 94\n                                                                                                                     // 95\n        if (all2 === 0) {                                                                                            // 96\n            content = dualListbox.settings.infoTextEmpty;                                                            // 97\n        } else if (visible2 === all2) {                                                                              // 98\n            content = formatString(dualListbox.settings.infoText, [visible2, all2]);                                 // 99\n        } else {                                                                                                     // 100\n            content = formatString(dualListbox.settings.infoTextFiltered, [visible2, all2]);                         // 101\n        }                                                                                                            // 102\n                                                                                                                     // 103\n        dualListbox.elements.info2.html(content);                                                                    // 104\n        dualListbox.elements.box2.toggleClass('filtered', !(visible2 === all2 || all2 === 0));                       // 105\n    }                                                                                                                // 106\n                                                                                                                     // 107\n    function refreshSelects(dualListbox) {                                                                           // 108\n        dualListbox.selectedElements = 0;                                                                            // 109\n                                                                                                                     // 110\n        dualListbox.elements.select1.empty();                                                                        // 111\n        dualListbox.elements.select2.empty();                                                                        // 112\n                                                                                                                     // 113\n        dualListbox.element.find('option').each(function(index, item) {                                              // 114\n            var $item = $(item);                                                                                     // 115\n            if ($item.prop('selected')) {                                                                            // 116\n                dualListbox.selectedElements++;                                                                      // 117\n                dualListbox.elements.select2.append($item.clone(true).prop('selected', $item.data('_selected')));    // 118\n            } else {                                                                                                 // 119\n                dualListbox.elements.select1.append($item.clone(true).prop('selected', $item.data('_selected')));    // 120\n            }                                                                                                        // 121\n        });                                                                                                          // 122\n                                                                                                                     // 123\n        if (dualListbox.settings.showFilterInputs) {                                                                 // 124\n            filter(dualListbox, 1);                                                                                  // 125\n            filter(dualListbox, 2);                                                                                  // 126\n        }                                                                                                            // 127\n        refreshInfo(dualListbox);                                                                                    // 128\n    }                                                                                                                // 129\n                                                                                                                     // 130\n    function filter(dualListbox, selectIndex) {                                                                      // 131\n        if (!dualListbox.settings.showFilterInputs) {                                                                // 132\n            return;                                                                                                  // 133\n        }                                                                                                            // 134\n                                                                                                                     // 135\n        saveSelections(dualListbox, selectIndex);                                                                    // 136\n                                                                                                                     // 137\n        dualListbox.elements['select'+selectIndex].empty().scrollTop(0);                                             // 138\n        var regex = new RegExp($.trim(dualListbox.elements['filterInput'+selectIndex].val()), 'gi'),                 // 139\n            options = dualListbox.element;                                                                           // 140\n                                                                                                                     // 141\n        if (selectIndex === 1) {                                                                                     // 142\n            options = options.find('option').not(':selected');                                                       // 143\n        } else  {                                                                                                    // 144\n            options = options.find('option:selected');                                                               // 145\n        }                                                                                                            // 146\n                                                                                                                     // 147\n        options.each(function(index, item) {                                                                         // 148\n            var $item = $(item),                                                                                     // 149\n                isFiltered = true;                                                                                   // 150\n            if (item.text.match(regex) || (dualListbox.settings.filterOnValues && $item.attr('value').match(regex) ) ) {\n                isFiltered = false;                                                                                  // 152\n                dualListbox.elements['select'+selectIndex].append($item.clone(true).prop('selected', $item.data('_selected')));\n            }                                                                                                        // 154\n            dualListbox.element.find('option').eq($item.data('original-index')).data('filtered'+selectIndex, isFiltered);\n        });                                                                                                          // 156\n                                                                                                                     // 157\n        refreshInfo(dualListbox);                                                                                    // 158\n    }                                                                                                                // 159\n                                                                                                                     // 160\n    function saveSelections(dualListbox, selectIndex) {                                                              // 161\n        dualListbox.elements['select'+selectIndex].find('option').each(function(index, item) {                       // 162\n            var $item = $(item);                                                                                     // 163\n            dualListbox.element.find('option').eq($item.data('original-index')).data('_selected', $item.prop('selected'));\n        });                                                                                                          // 165\n    }                                                                                                                // 166\n                                                                                                                     // 167\n    function sortOptions(select) {                                                                                   // 168\n        select.find('option').sort(function(a, b) {                                                                  // 169\n            return ($(a).data('original-index') > $(b).data('original-index')) ? 1 : -1;                             // 170\n        }).appendTo(select);                                                                                         // 171\n    }                                                                                                                // 172\n                                                                                                                     // 173\n    function clearSelections(dualListbox) {                                                                          // 174\n        dualListbox.elements.select1.find('option').each(function() {                                                // 175\n            dualListbox.element.find('option').data('_selected', false);                                             // 176\n        });                                                                                                          // 177\n    }                                                                                                                // 178\n                                                                                                                     // 179\n    function move(dualListbox) {                                                                                     // 180\n        if (dualListbox.settings.preserveSelectionOnMove === 'all' && !dualListbox.settings.moveOnSelect) {          // 181\n            saveSelections(dualListbox, 1);                                                                          // 182\n            saveSelections(dualListbox, 2);                                                                          // 183\n        } else if (dualListbox.settings.preserveSelectionOnMove === 'moved' && !dualListbox.settings.moveOnSelect) { // 184\n            saveSelections(dualListbox, 1);                                                                          // 185\n        }                                                                                                            // 186\n                                                                                                                     // 187\n        dualListbox.elements.select1.find('option:selected').each(function(index, item) {                            // 188\n            var $item = $(item);                                                                                     // 189\n            if (!$item.data('filtered1')) {                                                                          // 190\n                changeSelectionState(dualListbox, $item.data('original-index'), true);                               // 191\n            }                                                                                                        // 192\n        });                                                                                                          // 193\n                                                                                                                     // 194\n        refreshSelects(dualListbox);                                                                                 // 195\n        triggerChangeEvent(dualListbox);                                                                             // 196\n        sortOptions(dualListbox.elements.select2);                                                                   // 197\n    }                                                                                                                // 198\n                                                                                                                     // 199\n    function remove(dualListbox) {                                                                                   // 200\n        if (dualListbox.settings.preserveSelectionOnMove === 'all' && !dualListbox.settings.moveOnSelect) {          // 201\n            saveSelections(dualListbox, 1);                                                                          // 202\n            saveSelections(dualListbox, 2);                                                                          // 203\n        } else if (dualListbox.settings.preserveSelectionOnMove === 'moved' && !dualListbox.settings.moveOnSelect) { // 204\n            saveSelections(dualListbox, 2);                                                                          // 205\n        }                                                                                                            // 206\n                                                                                                                     // 207\n        dualListbox.elements.select2.find('option:selected').each(function(index, item) {                            // 208\n            var $item = $(item);                                                                                     // 209\n            if (!$item.data('filtered2')) {                                                                          // 210\n                changeSelectionState(dualListbox, $item.data('original-index'), false);                              // 211\n            }                                                                                                        // 212\n        });                                                                                                          // 213\n                                                                                                                     // 214\n        refreshSelects(dualListbox);                                                                                 // 215\n        triggerChangeEvent(dualListbox);                                                                             // 216\n        sortOptions(dualListbox.elements.select1);                                                                   // 217\n    }                                                                                                                // 218\n                                                                                                                     // 219\n    function moveAll(dualListbox) {                                                                                  // 220\n        if (dualListbox.settings.preserveSelectionOnMove === 'all' && !dualListbox.settings.moveOnSelect) {          // 221\n            saveSelections(dualListbox, 1);                                                                          // 222\n            saveSelections(dualListbox, 2);                                                                          // 223\n        } else if (dualListbox.settings.preserveSelectionOnMove === 'moved' && !dualListbox.settings.moveOnSelect) { // 224\n            saveSelections(dualListbox, 1);                                                                          // 225\n        }                                                                                                            // 226\n                                                                                                                     // 227\n        dualListbox.element.find('option').each(function(index, item) {                                              // 228\n            var $item = $(item);                                                                                     // 229\n            if (!$item.data('filtered1')) {                                                                          // 230\n                $item.prop('selected', true);                                                                        // 231\n            }                                                                                                        // 232\n        });                                                                                                          // 233\n                                                                                                                     // 234\n        refreshSelects(dualListbox);                                                                                 // 235\n        triggerChangeEvent(dualListbox);                                                                             // 236\n    }                                                                                                                // 237\n                                                                                                                     // 238\n    function removeAll(dualListbox) {                                                                                // 239\n        if (dualListbox.settings.preserveSelectionOnMove === 'all' && !dualListbox.settings.moveOnSelect) {          // 240\n            saveSelections(dualListbox, 1);                                                                          // 241\n            saveSelections(dualListbox, 2);                                                                          // 242\n        } else if (dualListbox.settings.preserveSelectionOnMove === 'moved' && !dualListbox.settings.moveOnSelect) { // 243\n            saveSelections(dualListbox, 2);                                                                          // 244\n        }                                                                                                            // 245\n                                                                                                                     // 246\n        dualListbox.element.find('option').each(function(index, item) {                                              // 247\n            var $item = $(item);                                                                                     // 248\n            if (!$item.data('filtered2')) {                                                                          // 249\n                $item.prop('selected', false);                                                                       // 250\n            }                                                                                                        // 251\n        });                                                                                                          // 252\n                                                                                                                     // 253\n        refreshSelects(dualListbox);                                                                                 // 254\n        triggerChangeEvent(dualListbox);                                                                             // 255\n    }                                                                                                                // 256\n                                                                                                                     // 257\n    function bindEvents(dualListbox) {                                                                               // 258\n        dualListbox.elements.form.submit(function(e) {                                                               // 259\n            if (dualListbox.elements.filterInput1.is(':focus')) {                                                    // 260\n                e.preventDefault();                                                                                  // 261\n                dualListbox.elements.filterInput1.focusout();                                                        // 262\n            } else if (dualListbox.elements.filterInput2.is(':focus')) {                                             // 263\n                e.preventDefault();                                                                                  // 264\n                dualListbox.elements.filterInput2.focusout();                                                        // 265\n            }                                                                                                        // 266\n        });                                                                                                          // 267\n                                                                                                                     // 268\n        dualListbox.element.on('bootstrapDualListbox.refresh', function(e, mustClearSelections){                     // 269\n            dualListbox.refresh(mustClearSelections);                                                                // 270\n        });                                                                                                          // 271\n                                                                                                                     // 272\n        dualListbox.elements.filterClear1.on('click', function() {                                                   // 273\n            dualListbox.setNonSelectedFilter('', true);                                                              // 274\n        });                                                                                                          // 275\n                                                                                                                     // 276\n        dualListbox.elements.filterClear2.on('click', function() {                                                   // 277\n            dualListbox.setSelectedFilter('', true);                                                                 // 278\n        });                                                                                                          // 279\n                                                                                                                     // 280\n        dualListbox.elements.moveButton.on('click', function() {                                                     // 281\n            move(dualListbox);                                                                                       // 282\n        });                                                                                                          // 283\n                                                                                                                     // 284\n        dualListbox.elements.moveAllButton.on('click', function() {                                                  // 285\n            moveAll(dualListbox);                                                                                    // 286\n        });                                                                                                          // 287\n                                                                                                                     // 288\n        dualListbox.elements.removeButton.on('click', function() {                                                   // 289\n            remove(dualListbox);                                                                                     // 290\n        });                                                                                                          // 291\n                                                                                                                     // 292\n        dualListbox.elements.removeAllButton.on('click', function() {                                                // 293\n            removeAll(dualListbox);                                                                                  // 294\n        });                                                                                                          // 295\n                                                                                                                     // 296\n        dualListbox.elements.filterInput1.on('change keyup', function() {                                            // 297\n            filter(dualListbox, 1);                                                                                  // 298\n        });                                                                                                          // 299\n                                                                                                                     // 300\n        dualListbox.elements.filterInput2.on('change keyup', function() {                                            // 301\n            filter(dualListbox, 2);                                                                                  // 302\n        });                                                                                                          // 303\n    }                                                                                                                // 304\n                                                                                                                     // 305\n    BootstrapDualListbox.prototype = {                                                                               // 306\n        init: function () {                                                                                          // 307\n            // Add the custom HTML template                                                                          // 308\n            this.container = $('' +                                                                                  // 309\n            '<div class=\"bootstrap-duallistbox-container\">' +                                                        // 310\n            ' <div class=\"box1\">' +                                                                                  // 311\n            '   <label></label>' +                                                                                   // 312\n            '   <span class=\"info-container\">' +                                                                     // 313\n            '     <span class=\"info\"></span>' +                                                                      // 314\n            '     <button type=\"button\" class=\"btn clear1 pull-right\"></button>' +                                   // 315\n            '   </span>' +                                                                                           // 316\n            '   <input class=\"filter\" type=\"text\">' +                                                                // 317\n            '   <div class=\"btn-group buttons\">' +                                                                   // 318\n            '     <button type=\"button\" class=\"btn moveall\">' +                                                      // 319\n            '       <i></i>' +                                                                                       // 320\n            '       <i></i>' +                                                                                       // 321\n            '     </button>' +                                                                                       // 322\n            '     <button type=\"button\" class=\"btn move\">' +                                                         // 323\n            '       <i></i>' +                                                                                       // 324\n            '     </button>' +                                                                                       // 325\n            '   </div>' +                                                                                            // 326\n            '   <select multiple=\"multiple\"></select>' +                                                             // 327\n            ' </div>' +                                                                                              // 328\n            ' <div class=\"box2\">' +                                                                                  // 329\n            '   <label></label>' +                                                                                   // 330\n            '   <span class=\"info-container\">' +                                                                     // 331\n            '     <span class=\"info\"></span>' +                                                                      // 332\n            '     <button type=\"button\" class=\"btn clear2 pull-right\"></button>' +                                   // 333\n            '   </span>' +                                                                                           // 334\n            '   <input class=\"filter\" type=\"text\">' +                                                                // 335\n            '   <div class=\"btn-group buttons\">' +                                                                   // 336\n            '     <button type=\"button\" class=\"btn remove\">' +                                                       // 337\n            '       <i></i>' +                                                                                       // 338\n            '     </button>' +                                                                                       // 339\n            '     <button type=\"button\" class=\"btn removeall\">' +                                                    // 340\n            '       <i></i>' +                                                                                       // 341\n            '       <i></i>' +                                                                                       // 342\n            '     </button>' +                                                                                       // 343\n            '   </div>' +                                                                                            // 344\n            '   <select multiple=\"multiple\"></select>' +                                                             // 345\n            ' </div>' +                                                                                              // 346\n            '</div>')                                                                                                // 347\n                .insertBefore(this.element);                                                                         // 348\n                                                                                                                     // 349\n            // Cache the inner elements                                                                              // 350\n            this.elements = {                                                                                        // 351\n                originalSelect: this.element,                                                                        // 352\n                box1: $('.box1', this.container),                                                                    // 353\n                box2: $('.box2', this.container),                                                                    // 354\n                filterInput1: $('.box1 .filter', this.container),                                                    // 355\n                filterInput2: $('.box2 .filter', this.container),                                                    // 356\n                filterClear1: $('.box1 .clear1', this.container),                                                    // 357\n                filterClear2: $('.box2 .clear2', this.container),                                                    // 358\n                label1: $('.box1 > label', this.container),                                                          // 359\n                label2: $('.box2 > label', this.container),                                                          // 360\n                info1: $('.box1 .info', this.container),                                                             // 361\n                info2: $('.box2 .info', this.container),                                                             // 362\n                select1: $('.box1 select', this.container),                                                          // 363\n                select2: $('.box2 select', this.container),                                                          // 364\n                moveButton: $('.box1 .move', this.container),                                                        // 365\n                removeButton: $('.box2 .remove', this.container),                                                    // 366\n                moveAllButton: $('.box1 .moveall', this.container),                                                  // 367\n                removeAllButton: $('.box2 .removeall', this.container),                                              // 368\n                form: $($('.box1 .filter', this.container)[0].form)                                                  // 369\n            };                                                                                                       // 370\n                                                                                                                     // 371\n            // Set select IDs                                                                                        // 372\n            this.originalSelectName = this.element.attr('name') || '';                                               // 373\n            var select1Id = 'bootstrap-duallistbox-nonselected-list_' + this.originalSelectName,                     // 374\n                select2Id = 'bootstrap-duallistbox-selected-list_' + this.originalSelectName;                        // 375\n            this.elements.select1.attr('id', select1Id);                                                             // 376\n            this.elements.select2.attr('id', select2Id);                                                             // 377\n            this.elements.label1.attr('for', select1Id);                                                             // 378\n            this.elements.label2.attr('for', select2Id);                                                             // 379\n                                                                                                                     // 380\n            // Apply all settings                                                                                    // 381\n            this.selectedElements = 0;                                                                               // 382\n            this.elementCount = 0;                                                                                   // 383\n            this.setBootstrap2Compatible(this.settings.bootstrap2Compatible);                                        // 384\n            this.setFilterTextClear(this.settings.filterTextClear);                                                  // 385\n            this.setFilterPlaceHolder(this.settings.filterPlaceHolder);                                              // 386\n            this.setMoveSelectedLabel(this.settings.moveSelectedLabel);                                              // 387\n            this.setMoveAllLabel(this.settings.moveAllLabel);                                                        // 388\n            this.setRemoveSelectedLabel(this.settings.removeSelectedLabel);                                          // 389\n            this.setRemoveAllLabel(this.settings.removeAllLabel);                                                    // 390\n            this.setMoveOnSelect(this.settings.moveOnSelect);                                                        // 391\n            this.setPreserveSelectionOnMove(this.settings.preserveSelectionOnMove);                                  // 392\n            this.setSelectedListLabel(this.settings.selectedListLabel);                                              // 393\n            this.setNonSelectedListLabel(this.settings.nonSelectedListLabel);                                        // 394\n            this.setHelperSelectNamePostfix(this.settings.helperSelectNamePostfix);                                  // 395\n            this.setSelectOrMinimalHeight(this.settings.selectorMinimalHeight);                                      // 396\n                                                                                                                     // 397\n            updateSelectionStates(this);                                                                             // 398\n                                                                                                                     // 399\n            this.setShowFilterInputs(this.settings.showFilterInputs);                                                // 400\n            this.setNonSelectedFilter(this.settings.nonSelectedFilter);                                              // 401\n            this.setSelectedFilter(this.settings.selectedFilter);                                                    // 402\n            this.setInfoText(this.settings.infoText);                                                                // 403\n            this.setInfoTextFiltered(this.settings.infoTextFiltered);                                                // 404\n            this.setInfoTextEmpty(this.settings.infoTextEmpty);                                                      // 405\n            this.setFilterOnValues(this.settings.filterOnValues);                                                    // 406\n                                                                                                                     // 407\n            // Hide the original select                                                                              // 408\n            this.element.hide();                                                                                     // 409\n                                                                                                                     // 410\n            bindEvents(this);                                                                                        // 411\n            refreshSelects(this);                                                                                    // 412\n                                                                                                                     // 413\n            return this.element;                                                                                     // 414\n        },                                                                                                           // 415\n        setBootstrap2Compatible: function(value, refresh) {                                                          // 416\n            this.settings.bootstrap2Compatible = value;                                                              // 417\n            if (value) {                                                                                             // 418\n                this.container.removeClass('row').addClass('row-fluid bs2compatible');                               // 419\n                this.container.find('.box1, .box2').removeClass('col-md-6').addClass('span6');                       // 420\n                this.container.find('.clear1, .clear2').removeClass('btn-default btn-xs').addClass('btn-mini');      // 421\n                this.container.find('input, select').removeClass('form-control');                                    // 422\n                this.container.find('.btn').removeClass('btn-default');                                              // 423\n                this.container.find('.moveall > i, .move > i').removeClass('glyphicon glyphicon-arrow-right').addClass('icon-arrow-right');\n                this.container.find('.removeall > i, .remove > i').removeClass('glyphicon glyphicon-arrow-left').addClass('icon-arrow-left');\n            } else {                                                                                                 // 426\n                this.container.removeClass('row-fluid bs2compatible').addClass('row');                               // 427\n                this.container.find('.box1, .box2').removeClass('span6').addClass('col-md-6');                       // 428\n                this.container.find('.clear1, .clear2').removeClass('btn-mini').addClass('btn-default btn-xs');      // 429\n                this.container.find('input, select').addClass('form-control');                                       // 430\n                this.container.find('.btn').addClass('btn-default');                                                 // 431\n                this.container.find('.moveall > i, .move > i').removeClass('icon-arrow-right').addClass('glyphicon glyphicon-arrow-right');\n                this.container.find('.removeall > i, .remove > i').removeClass('icon-arrow-left').addClass('glyphicon glyphicon-arrow-left');\n            }                                                                                                        // 434\n            if (refresh) {                                                                                           // 435\n                refreshSelects(this);                                                                                // 436\n            }                                                                                                        // 437\n            return this.element;                                                                                     // 438\n        },                                                                                                           // 439\n        setFilterTextClear: function(value, refresh) {                                                               // 440\n            this.settings.filterTextClear = value;                                                                   // 441\n            this.elements.filterClear1.html(value);                                                                  // 442\n            this.elements.filterClear2.html(value);                                                                  // 443\n            if (refresh) {                                                                                           // 444\n                refreshSelects(this);                                                                                // 445\n            }                                                                                                        // 446\n            return this.element;                                                                                     // 447\n        },                                                                                                           // 448\n        setFilterPlaceHolder: function(value, refresh) {                                                             // 449\n            this.settings.filterPlaceHolder = value;                                                                 // 450\n            this.elements.filterInput1.attr('placeholder', value);                                                   // 451\n            this.elements.filterInput2.attr('placeholder', value);                                                   // 452\n            if (refresh) {                                                                                           // 453\n                refreshSelects(this);                                                                                // 454\n            }                                                                                                        // 455\n            return this.element;                                                                                     // 456\n        },                                                                                                           // 457\n        setMoveSelectedLabel: function(value, refresh) {                                                             // 458\n            this.settings.moveSelectedLabel = value;                                                                 // 459\n            this.elements.moveButton.attr('title', value);                                                           // 460\n            if (refresh) {                                                                                           // 461\n                refreshSelects(this);                                                                                // 462\n            }                                                                                                        // 463\n            return this.element;                                                                                     // 464\n        },                                                                                                           // 465\n        setMoveAllLabel: function(value, refresh) {                                                                  // 466\n            this.settings.moveAllLabel = value;                                                                      // 467\n            this.elements.moveAllButton.attr('title', value);                                                        // 468\n            if (refresh) {                                                                                           // 469\n                refreshSelects(this);                                                                                // 470\n            }                                                                                                        // 471\n            return this.element;                                                                                     // 472\n        },                                                                                                           // 473\n        setRemoveSelectedLabel: function(value, refresh) {                                                           // 474\n            this.settings.removeSelectedLabel = value;                                                               // 475\n            this.elements.removeButton.attr('title', value);                                                         // 476\n            if (refresh) {                                                                                           // 477\n                refreshSelects(this);                                                                                // 478\n            }                                                                                                        // 479\n            return this.element;                                                                                     // 480\n        },                                                                                                           // 481\n        setRemoveAllLabel: function(value, refresh) {                                                                // 482\n            this.settings.removeAllLabel = value;                                                                    // 483\n            this.elements.removeAllButton.attr('title', value);                                                      // 484\n            if (refresh) {                                                                                           // 485\n                refreshSelects(this);                                                                                // 486\n            }                                                                                                        // 487\n            return this.element;                                                                                     // 488\n        },                                                                                                           // 489\n        setMoveOnSelect: function(value, refresh) {                                                                  // 490\n            if (isBuggyAndroid) {                                                                                    // 491\n                value = true;                                                                                        // 492\n            }                                                                                                        // 493\n            this.settings.moveOnSelect = value;                                                                      // 494\n            if (this.settings.moveOnSelect) {                                                                        // 495\n                this.container.addClass('moveonselect');                                                             // 496\n                var self = this;                                                                                     // 497\n                this.elements.select1.on('change', function() {                                                      // 498\n                    move(self);                                                                                      // 499\n                });                                                                                                  // 500\n                this.elements.select2.on('change', function() {                                                      // 501\n                    remove(self);                                                                                    // 502\n                });                                                                                                  // 503\n            } else {                                                                                                 // 504\n                this.container.removeClass('moveonselect');                                                          // 505\n                this.elements.select1.off('change');                                                                 // 506\n                this.elements.select2.off('change');                                                                 // 507\n            }                                                                                                        // 508\n            if (refresh) {                                                                                           // 509\n                refreshSelects(this);                                                                                // 510\n            }                                                                                                        // 511\n            return this.element;                                                                                     // 512\n        },                                                                                                           // 513\n        setPreserveSelectionOnMove: function(value, refresh) {                                                       // 514\n            // We are forcing to move on select and disabling preserveSelectionOnMove on Android                     // 515\n            if (isBuggyAndroid) {                                                                                    // 516\n                value = false;                                                                                       // 517\n            }                                                                                                        // 518\n            this.settings.preserveSelectionOnMove = value;                                                           // 519\n            if (refresh) {                                                                                           // 520\n                refreshSelects(this);                                                                                // 521\n            }                                                                                                        // 522\n            return this.element;                                                                                     // 523\n        },                                                                                                           // 524\n        setSelectedListLabel: function(value, refresh) {                                                             // 525\n            this.settings.selectedListLabel = value;                                                                 // 526\n            if (value) {                                                                                             // 527\n                this.elements.label2.show().html(value);                                                             // 528\n            } else {                                                                                                 // 529\n                this.elements.label2.hide().html(value);                                                             // 530\n            }                                                                                                        // 531\n            if (refresh) {                                                                                           // 532\n                refreshSelects(this);                                                                                // 533\n            }                                                                                                        // 534\n            return this.element;                                                                                     // 535\n        },                                                                                                           // 536\n        setNonSelectedListLabel: function(value, refresh) {                                                          // 537\n            this.settings.nonSelectedListLabel = value;                                                              // 538\n            if (value) {                                                                                             // 539\n                this.elements.label1.show().html(value);                                                             // 540\n            } else {                                                                                                 // 541\n                this.elements.label1.hide().html(value);                                                             // 542\n            }                                                                                                        // 543\n            if (refresh) {                                                                                           // 544\n                refreshSelects(this);                                                                                // 545\n            }                                                                                                        // 546\n            return this.element;                                                                                     // 547\n        },                                                                                                           // 548\n        setHelperSelectNamePostfix: function(value, refresh) {                                                       // 549\n            this.settings.helperSelectNamePostfix = value;                                                           // 550\n            if (value) {                                                                                             // 551\n                this.elements.select1.attr('name', this.originalSelectName + value + '1');                           // 552\n                this.elements.select2.attr('name', this.originalSelectName + value + '2');                           // 553\n            } else {                                                                                                 // 554\n                this.elements.select1.removeAttr('name');                                                            // 555\n                this.elements.select2.removeAttr('name');                                                            // 556\n            }                                                                                                        // 557\n            if (refresh) {                                                                                           // 558\n                refreshSelects(this);                                                                                // 559\n            }                                                                                                        // 560\n            return this.element;                                                                                     // 561\n        },                                                                                                           // 562\n        setSelectOrMinimalHeight: function(value, refresh) {                                                         // 563\n            this.settings.selectorMinimalHeight = value;                                                             // 564\n            var height = this.element.height();                                                                      // 565\n            if (this.element.height() < value) {                                                                     // 566\n                height = value;                                                                                      // 567\n            }                                                                                                        // 568\n            this.elements.select1.height(height);                                                                    // 569\n            this.elements.select2.height(height);                                                                    // 570\n            if (refresh) {                                                                                           // 571\n                refreshSelects(this);                                                                                // 572\n            }                                                                                                        // 573\n            return this.element;                                                                                     // 574\n        },                                                                                                           // 575\n        setShowFilterInputs: function(value, refresh) {                                                              // 576\n            if (!value) {                                                                                            // 577\n                this.setNonSelectedFilter('');                                                                       // 578\n                this.setSelectedFilter('');                                                                          // 579\n                refreshSelects(this);                                                                                // 580\n                this.elements.filterInput1.hide();                                                                   // 581\n                this.elements.filterInput2.hide();                                                                   // 582\n            } else {                                                                                                 // 583\n                this.elements.filterInput1.show();                                                                   // 584\n                this.elements.filterInput2.show();                                                                   // 585\n            }                                                                                                        // 586\n            this.settings.showFilterInputs = value;                                                                  // 587\n            if (refresh) {                                                                                           // 588\n                refreshSelects(this);                                                                                // 589\n            }                                                                                                        // 590\n            return this.element;                                                                                     // 591\n        },                                                                                                           // 592\n        setNonSelectedFilter: function(value, refresh) {                                                             // 593\n            if (this.settings.showFilterInputs) {                                                                    // 594\n                this.settings.nonSelectedFilter = value;                                                             // 595\n                this.elements.filterInput1.val(value);                                                               // 596\n                if (refresh) {                                                                                       // 597\n                    refreshSelects(this);                                                                            // 598\n                }                                                                                                    // 599\n                return this.element;                                                                                 // 600\n            }                                                                                                        // 601\n        },                                                                                                           // 602\n        setSelectedFilter: function(value, refresh) {                                                                // 603\n            if (this.settings.showFilterInputs) {                                                                    // 604\n                this.settings.selectedFilter = value;                                                                // 605\n                this.elements.filterInput2.val(value);                                                               // 606\n                if (refresh) {                                                                                       // 607\n                    refreshSelects(this);                                                                            // 608\n                }                                                                                                    // 609\n                return this.element;                                                                                 // 610\n            }                                                                                                        // 611\n        },                                                                                                           // 612\n        setInfoText: function(value, refresh) {                                                                      // 613\n            this.settings.infoText = value;                                                                          // 614\n            if (refresh) {                                                                                           // 615\n                refreshSelects(this);                                                                                // 616\n            }                                                                                                        // 617\n            return this.element;                                                                                     // 618\n        },                                                                                                           // 619\n        setInfoTextFiltered: function(value, refresh) {                                                              // 620\n            this.settings.infoTextFiltered = value;                                                                  // 621\n            if (refresh) {                                                                                           // 622\n                refreshSelects(this);                                                                                // 623\n            }                                                                                                        // 624\n            return this.element;                                                                                     // 625\n        },                                                                                                           // 626\n        setInfoTextEmpty: function(value, refresh) {                                                                 // 627\n            this.settings.infoTextEmpty = value;                                                                     // 628\n            if (refresh) {                                                                                           // 629\n                refreshSelects(this);                                                                                // 630\n            }                                                                                                        // 631\n            return this.element;                                                                                     // 632\n        },                                                                                                           // 633\n        setFilterOnValues: function(value, refresh) {                                                                // 634\n            this.settings.filterOnValues = value;                                                                    // 635\n            if (refresh) {                                                                                           // 636\n                refreshSelects(this);                                                                                // 637\n            }                                                                                                        // 638\n            return this.element;                                                                                     // 639\n        },                                                                                                           // 640\n        getContainer: function() {                                                                                   // 641\n            return this.container;                                                                                   // 642\n        },                                                                                                           // 643\n        refresh: function(mustClearSelections) {                                                                     // 644\n            updateSelectionStates(this);                                                                             // 645\n                                                                                                                     // 646\n            if (!mustClearSelections) {                                                                              // 647\n                saveSelections(this, 1);                                                                             // 648\n                saveSelections(this, 2);                                                                             // 649\n            } else {                                                                                                 // 650\n                clearSelections(this);                                                                               // 651\n            }                                                                                                        // 652\n                                                                                                                     // 653\n            refreshSelects(this);                                                                                    // 654\n        },                                                                                                           // 655\n        destroy: function() {                                                                                        // 656\n            this.container.remove();                                                                                 // 657\n            this.element.show();                                                                                     // 658\n            $.data(this, 'plugin_' + pluginName, null);                                                              // 659\n            return this.element;                                                                                     // 660\n        }                                                                                                            // 661\n    };                                                                                                               // 662\n                                                                                                                     // 663\n    // A really lightweight plugin wrapper around the constructor,                                                   // 664\n    // preventing against multiple instantiations                                                                    // 665\n    $.fn[ pluginName ] = function (options) {                                                                        // 666\n        var args = arguments;                                                                                        // 667\n                                                                                                                     // 668\n        // Is the first parameter an object (options), or was omitted, instantiate a new instance of the plugin.     // 669\n        if (options === undefined || typeof options === 'object') {                                                  // 670\n            return this.each(function () {                                                                           // 671\n                // If this is not a select                                                                           // 672\n                if (!$(this).is('select')) {                                                                         // 673\n                    $(this).find('select').each(function(index, item) {                                              // 674\n                        // For each nested select, instantiate the Dual List Box                                     // 675\n                        $(item).bootstrapDualListbox(options);                                                       // 676\n                    });                                                                                              // 677\n                } else if (!$.data(this, 'plugin_' + pluginName)) {                                                  // 678\n                    // Only allow the plugin to be instantiated once so we check that the element has no plugin instantiation yet\n                                                                                                                     // 680\n                    // if it has no instance, create a new one, pass options to our plugin constructor,              // 681\n                    // and store the plugin instance in the elements jQuery data object.                             // 682\n                    $.data(this, 'plugin_' + pluginName, new BootstrapDualListbox(this, options));                   // 683\n                }                                                                                                    // 684\n            });                                                                                                      // 685\n            // If the first parameter is a string and it doesn't start with an underscore or \"contains\" the `init`-function,\n            // treat this as a call to a public method.                                                              // 687\n        } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {                        // 688\n                                                                                                                     // 689\n            // Cache the method call to make it possible to return a value                                           // 690\n            var returns;                                                                                             // 691\n                                                                                                                     // 692\n            this.each(function () {                                                                                  // 693\n                var instance = $.data(this, 'plugin_' + pluginName);                                                 // 694\n                // Tests that there's already a plugin-instance and checks that the requested public method exists   // 695\n                if (instance instanceof BootstrapDualListbox && typeof instance[options] === 'function') {           // 696\n                    // Call the method of our plugin instance, and pass it the supplied arguments.                   // 697\n                    returns = instance[options].apply(instance, Array.prototype.slice.call(args, 1));                // 698\n                }                                                                                                    // 699\n            });                                                                                                      // 700\n                                                                                                                     // 701\n            // If the earlier cached method gives a value back return the value,                                     // 702\n            // otherwise return this to preserve chainability.                                                       // 703\n            return returns !== undefined ? returns : this;                                                           // 704\n        }                                                                                                            // 705\n                                                                                                                     // 706\n    };                                                                                                               // 707\n                                                                                                                     // 708\n})(jQuery, window, document);                                                                                        // 709\n                                                                                                                     // 710\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                     // 720\n}).call(this);                                                       // 721\n                                                                     // 722\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['amdingo:bootstrap-duallistbox'] = {};\n\n})();\n","servePath":"/packages/amdingo_bootstrap-duallistbox.js","sourceMap":{"version":3,"sources":["/packages/amdingo_bootstrap-duallistbox/packages/amdingo_bootstrap-duallistbox.js"],"names":[],"mappingsfile":"/packages/amdingo_bootstrap-duallistbox.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/amdingo:bootstrap-duallistbox/package/jquery.bootstrap-duallistbox.js                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n;(function ($, window, document, undefined) {                                                                        // 1\n    // Create the defaults once                                                                                      // 2\n    var pluginName = 'bootstrapDualListbox',                                                                         // 3\n        defaults = {                                                                                                 // 4\n            bootstrap2Compatible: false,                                                                             // 5\n            filterTextClear: 'show all',                                                                             // 6\n            filterPlaceHolder: 'Filter',                                                                             // 7\n            moveSelectedLabel: 'Move selected',                                                                      // 8\n            moveAllLabel: 'Move all',                                                                                // 9\n            removeSelectedLabel: 'Remove selected',                                                                  // 10\n            removeAllLabel: 'Remove all',                                                                            // 11\n            moveOnSelect: true,                                                                 // true/false (forced true on androids, see the comment later)\n            preserveSelectionOnMove: false,                                                     // 'all' / 'moved' / false\n            selectedListLabel: false,                                                           // 'string', false   // 14\n            nonSelectedListLabel: false,                                                        // 'string', false   // 15\n            helperSelectNamePostfix: '_helper',                                                 // 'string_of_postfix' / false\n            selectorMinimalHeight: 100,                                                                              // 17\n            showFilterInputs: true,                                                             // whether to show filter inputs\n            nonSelectedFilter: '',                                                              // string, filter the non selected options\n            selectedFilter: '',                                                                 // string, filter the selected options\n            infoText: 'Showing all {0}',                                                        // text when all options are visible / false for no info text\n            infoTextFiltered: '<span class=\"label label-warning\">Filtered</span> {0} from {1}', // when not all of the options are visible due to the filter\n            infoTextEmpty: 'Empty list',                                                        // when there are no options present in the list\n            filterOnValues: false                                                               // filter by selector's values, boolean\n        },                                                                                                           // 25\n    // Selections are invisible on android if the containing select is styled with CSS                               // 26\n    // http://code.google.com/p/android/issues/detail?id=16922                                                       // 27\n        isBuggyAndroid = /android/i.test(navigator.userAgent.toLowerCase());                                         // 28\n                                                                                                                     // 29\n    // The actual plugin constructor                                                                                 // 30\n    function BootstrapDualListbox(element, options) {                                                                // 31\n        this.element = $(element);                                                                                   // 32\n        // jQuery has an extend method which merges the contents of two or                                           // 33\n        // more objects, storing the result in the first object. The first object                                    // 34\n        // is generally empty as we don't want to alter the default options for                                      // 35\n        // future instances of the plugin                                                                            // 36\n        this.settings = $.extend({}, defaults, options);                                                             // 37\n        this._defaults = defaults;                                                                                   // 38\n        this._name = pluginName;                                                                                     // 39\n        this.init();                                                                                                 // 40\n    }                                                                                                                // 41\n                                                                                                                     // 42\n    function triggerChangeEvent(dualListbox) {                                                                       // 43\n        dualListbox.element.trigger('change');                                                                       // 44\n    }                                                                                                                // 45\n                                                                                                                     // 46\n    function updateSelectionStates(dualListbox) {                                                                    // 47\n        dualListbox.element.find('option').each(function(index, item) {                                              // 48\n            var $item = $(item);                                                                                     // 49\n            if (typeof($item.data('original-index')) === 'undefined') {                                              // 50\n                $item.data('original-index', dualListbox.elementCount++);                                            // 51\n            }                                                                                                        // 52\n            if (typeof($item.data('_selected')) === 'undefined') {                                                   // 53\n                $item.data('_selected', false);                                                                      // 54\n            }                                                                                                        // 55\n        });                                                                                                          // 56\n    }                                                                                                                // 57\n                                                                                                                     // 58\n    function changeSelectionState(dualListbox, original_index, selected) {                                           // 59\n        dualListbox.element.find('option').each(function(index, item) {                                              // 60\n            var $item = $(item);                                                                                     // 61\n            if ($item.data('original-index') === original_index) {                                                   // 62\n                $item.prop('selected', selected);                                                                    // 63\n            }                                                                                                        // 64\n        });                                                                                                          // 65\n    }                                                                                                                // 66\n                                                                                                                     // 67\n    function formatString(s, args) {                                                                                 // 68\n        return s.replace(/\\{(\\d+)\\}/g, function(match, number) {                                                     // 69\n            return typeof args[number] !== 'undefined' ? args[number] : match;                                       // 70\n        });                                                                                                          // 71\n    }                                                                                                                // 72\n                                                                                                                     // 73\n    function refreshInfo(dualListbox) {                                                                              // 74\n        if (!dualListbox.settings.infoText) {                                                                        // 75\n            return;                                                                                                  // 76\n        }                                                                                                            // 77\n                                                                                                                     // 78\n        var visible1 = dualListbox.elements.select1.find('option').length,                                           // 79\n            visible2 = dualListbox.elements.select2.find('option').length,                                           // 80\n            all1 = dualListbox.element.find('option').length - dualListbox.selectedElements,                         // 81\n            all2 = dualListbox.selectedElements,                                                                     // 82\n            content = '';                                                                                            // 83\n                                                                                                                     // 84\n        if (all1 === 0) {                                                                                            // 85\n            content = dualListbox.settings.infoTextEmpty;                                                            // 86\n        } else if (visible1 === all1) {                                                                              // 87\n            content = formatString(dualListbox.settings.infoText, [visible1, all1]);                                 // 88\n        } else {                                                                                                     // 89\n            content = formatString(dualListbox.settings.infoTextFiltered, [visible1, all1]);                         // 90\n        }                                                                                                            // 91\n                                                                                                                     // 92\n        dualListbox.elements.info1.html(content);                                                                    // 93\n        dualListbox.elements.box1.toggleClass('filtered', !(visible1 === all1 || all1 === 0));                       // 94\n                                                                                                                     // 95\n        if (all2 === 0) {                                                                                            // 96\n            content = dualListbox.settings.infoTextEmpty;                                                            // 97\n        } else if (visible2 === all2) {                                                                              // 98\n            content = formatString(dualListbox.settings.infoText, [visible2, all2]);                                 // 99\n        } else {                                                                                                     // 100\n            content = formatString(dualListbox.settings.infoTextFiltered, [visible2, all2]);                         // 101\n        }                                                                                                            // 102\n                                                                                                                     // 103\n        dualListbox.elements.info2.html(content);                                                                    // 104\n        dualListbox.elements.box2.toggleClass('filtered', !(visible2 === all2 || all2 === 0));                       // 105\n    }                                                                                                                // 106\n                                                                                                                     // 107\n    function refreshSelects(dualListbox) {                                                                           // 108\n        dualListbox.selectedElements = 0;                                                                            // 109\n                                                                                                                     // 110\n        dualListbox.elements.select1.empty();                                                                        // 111\n        dualListbox.elements.select2.empty();                                                                        // 112\n                                                                                                                     // 113\n        dualListbox.element.find('option').each(function(index, item) {                                              // 114\n            var $item = $(item);                                                                                     // 115\n            if ($item.prop('selected')) {                                                                            // 116\n                dualListbox.selectedElements++;                                                                      // 117\n                dualListbox.elements.select2.append($item.clone(true).prop('selected', $item.data('_selected')));    // 118\n            } else {                                                                                                 // 119\n                dualListbox.elements.select1.append($item.clone(true).prop('selected', $item.data('_selected')));    // 120\n            }                                                                                                        // 121\n        });                                                                                                          // 122\n                                                                                                                     // 123\n        if (dualListbox.settings.showFilterInputs) {                                                                 // 124\n            filter(dualListbox, 1);                                                                                  // 125\n            filter(dualListbox, 2);                                                                                  // 126\n        }                                                                                                            // 127\n        refreshInfo(dualListbox);                                                                                    // 128\n    }                                                                                                                // 129\n                                                                                                                     // 130\n    function filter(dualListbox, selectIndex) {                                                                      // 131\n        if (!dualListbox.settings.showFilterInputs) {                                                                // 132\n            return;                                                                                                  // 133\n        }                                                                                                            // 134\n                                                                                                                     // 135\n        saveSelections(dualListbox, selectIndex);                                                                    // 136\n                                                                                                                     // 137\n        dualListbox.elements['select'+selectIndex].empty().scrollTop(0);                                             // 138\n        var regex = new RegExp($.trim(dualListbox.elements['filterInput'+selectIndex].val()), 'gi'),                 // 139\n            options = dualListbox.element;                                                                           // 140\n                                                                                                                     // 141\n        if (selectIndex === 1) {                                                                                     // 142\n            options = options.find('option').not(':selected');                                                       // 143\n        } else  {                                                                                                    // 144\n            options = options.find('option:selected');                                                               // 145\n        }                                                                                                            // 146\n                                                                                                                     // 147\n        options.each(function(index, item) {                                                                         // 148\n            var $item = $(item),                                                                                     // 149\n                isFiltered = true;                                                                                   // 150\n            if (item.text.match(regex) || (dualListbox.settings.filterOnValues && $item.attr('value').match(regex) ) ) {\n                isFiltered = false;                                                                                  // 152\n                dualListbox.elements['select'+selectIndex].append($item.clone(true).prop('selected', $item.data('_selected')));\n            }                                                                                                        // 154\n            dualListbox.element.find('option').eq($item.data('original-index')).data('filtered'+selectIndex, isFiltered);\n        });                                                                                                          // 156\n                                                                                                                     // 157\n        refreshInfo(dualListbox);                                                                                    // 158\n    }                                                                                                                // 159\n                                                                                                                     // 160\n    function saveSelections(dualListbox, selectIndex) {                                                              // 161\n        dualListbox.elements['select'+selectIndex].find('option').each(function(index, item) {                       // 162\n            var $item = $(item);                                                                                     // 163\n            dualListbox.element.find('option').eq($item.data('original-index')).data('_selected', $item.prop('selected'));\n        });                                                                                                          // 165\n    }                                                                                                                // 166\n                                                                                                                     // 167\n    function sortOptions(select) {                                                                                   // 168\n        select.find('option').sort(function(a, b) {                                                                  // 169\n            return ($(a).data('original-index') > $(b).data('original-index')) ? 1 : -1;                             // 170\n        }).appendTo(select);                                                                                         // 171\n    }                                                                                                                // 172\n                                                                                                                     // 173\n    function clearSelections(dualListbox) {                                                                          // 174\n        dualListbox.elements.select1.find('option').each(function() {                                                // 175\n            dualListbox.element.find('option').data('_selected', false);                                             // 176\n        });                                                                                                          // 177\n    }                                                                                                                // 178\n                                                                                                                     // 179\n    function move(dualListbox) {                                                                                     // 180\n        if (dualListbox.settings.preserveSelectionOnMove === 'all' && !dualListbox.settings.moveOnSelect) {          // 181\n            saveSelections(dualListbox, 1);                                                                          // 182\n            saveSelections(dualListbox, 2);                                                                          // 183\n        } else if (dualListbox.settings.preserveSelectionOnMove === 'moved' && !dualListbox.settings.moveOnSelect) { // 184\n            saveSelections(dualListbox, 1);                                                                          // 185\n        }                                                                                                            // 186\n                                                                                                                     // 187\n        dualListbox.elements.select1.find('option:selected').each(function(index, item) {                            // 188\n            var $item = $(item);                                                                                     // 189\n            if (!$item.data('filtered1')) {                                                                          // 190\n                changeSelectionState(dualListbox, $item.data('original-index'), true);                               // 191\n            }                                                                                                        // 192\n        });                                                                                                          // 193\n                                                                                                                     // 194\n        refreshSelects(dualListbox);                                                                                 // 195\n        triggerChangeEvent(dualListbox);                                                                             // 196\n        sortOptions(dualListbox.elements.select2);                                                                   // 197\n    }                                                                                                                // 198\n                                                                                                                     // 199\n    function remove(dualListbox) {                                                                                   // 200\n        if (dualListbox.settings.preserveSelectionOnMove === 'all' && !dualListbox.settings.moveOnSelect) {          // 201\n            saveSelections(dualListbox, 1);                                                                          // 202\n            saveSelections(dualListbox, 2);                                                                          // 203\n        } else if (dualListbox.settings.preserveSelectionOnMove === 'moved' && !dualListbox.settings.moveOnSelect) { // 204\n            saveSelections(dualListbox, 2);                                                                          // 205\n        }                                                                                                            // 206\n                                                                                                                     // 207\n        dualListbox.elements.select2.find('option:selected').each(function(index, item) {                            // 208\n            var $item = $(item);                                                                                     // 209\n            if (!$item.data('filtered2')) {                                                                          // 210\n                changeSelectionState(dualListbox, $item.data('original-index'), false);                              // 211\n            }                                                                                                        // 212\n        });                                                                                                          // 213\n                                                                                                                     // 214\n        refreshSelects(dualListbox);                                                                                 // 215\n        triggerChangeEvent(dualListbox);                                                                             // 216\n        sortOptions(dualListbox.elements.select1);                                                                   // 217\n    }                                                                                                                // 218\n                                                                                                                     // 219\n    function moveAll(dualListbox) {                                                                                  // 220\n        if (dualListbox.settings.preserveSelectionOnMove === 'all' && !dualListbox.settings.moveOnSelect) {          // 221\n            saveSelections(dualListbox, 1);                                                                          // 222\n            saveSelections(dualListbox, 2);                                                                          // 223\n        } else if (dualListbox.settings.preserveSelectionOnMove === 'moved' && !dualListbox.settings.moveOnSelect) { // 224\n            saveSelections(dualListbox, 1);                                                                          // 225\n        }                                                                                                            // 226\n                                                                                                                     // 227\n        dualListbox.element.find('option').each(function(index, item) {                                              // 228\n            var $item = $(item);                                                                                     // 229\n            if (!$item.data('filtered1')) {                                                                          // 230\n                $item.prop('selected', true);                                                                        // 231\n            }                                                                                                        // 232\n        });                                                                                                          // 233\n                                                                                                                     // 234\n        refreshSelects(dualListbox);                                                                                 // 235\n        triggerChangeEvent(dualListbox);                                                                             // 236\n    }                                                                                                                // 237\n                                                                                                                     // 238\n    function removeAll(dualListbox) {                                                                                // 239\n        if (dualListbox.settings.preserveSelectionOnMove === 'all' && !dualListbox.settings.moveOnSelect) {          // 240\n            saveSelections(dualListbox, 1);                                                                          // 241\n            saveSelections(dualListbox, 2);                                                                          // 242\n        } else if (dualListbox.settings.preserveSelectionOnMove === 'moved' && !dualListbox.settings.moveOnSelect) { // 243\n            saveSelections(dualListbox, 2);                                                                          // 244\n        }                                                                                                            // 245\n                                                                                                                     // 246\n        dualListbox.element.find('option').each(function(index, item) {                                              // 247\n            var $item = $(item);                                                                                     // 248\n            if (!$item.data('filtered2')) {                                                                          // 249\n                $item.prop('selected', false);                                                                       // 250\n            }                                                                                                        // 251\n        });                                                                                                          // 252\n                                                                                                                     // 253\n        refreshSelects(dualListbox);                                                                                 // 254\n        triggerChangeEvent(dualListbox);                                                                             // 255\n    }                                                                                                                // 256\n                                                                                                                     // 257\n    function bindEvents(dualListbox) {                                                                               // 258\n        dualListbox.elements.form.submit(function(e) {                                                               // 259\n            if (dualListbox.elements.filterInput1.is(':focus')) {                                                    // 260\n                e.preventDefault();                                                                                  // 261\n                dualListbox.elements.filterInput1.focusout();                                                        // 262\n            } else if (dualListbox.elements.filterInput2.is(':focus')) {                                             // 263\n                e.preventDefault();                                                                                  // 264\n                dualListbox.elements.filterInput2.focusout();                                                        // 265\n            }                                                                                                        // 266\n        });                                                                                                          // 267\n                                                                                                                     // 268\n        dualListbox.element.on('bootstrapDualListbox.refresh', function(e, mustClearSelections){                     // 269\n            dualListbox.refresh(mustClearSelections);                                                                // 270\n        });                                                                                                          // 271\n                                                                                                                     // 272\n        dualListbox.elements.filterClear1.on('click', function() {                                                   // 273\n            dualListbox.setNonSelectedFilter('', true);                                                              // 274\n        });                                                                                                          // 275\n                                                                                                                     // 276\n        dualListbox.elements.filterClear2.on('click', function() {                                                   // 277\n            dualListbox.setSelectedFilter('', true);                                                                 // 278\n        });                                                                                                          // 279\n                                                                                                                     // 280\n        dualListbox.elements.moveButton.on('click', function() {                                                     // 281\n            move(dualListbox);                                                                                       // 282\n        });                                                                                                          // 283\n                                                                                                                     // 284\n        dualListbox.elements.moveAllButton.on('click', function() {                                                  // 285\n            moveAll(dualListbox);                                                                                    // 286\n        });                                                                                                          // 287\n                                                                                                                     // 288\n        dualListbox.elements.removeButton.on('click', function() {                                                   // 289\n            remove(dualListbox);                                                                                     // 290\n        });                                                                                                          // 291\n                                                                                                                     // 292\n        dualListbox.elements.removeAllButton.on('click', function() {                                                // 293\n            removeAll(dualListbox);                                                                                  // 294\n        });                                                                                                          // 295\n                                                                                                                     // 296\n        dualListbox.elements.filterInput1.on('change keyup', function() {                                            // 297\n            filter(dualListbox, 1);                                                                                  // 298\n        });                                                                                                          // 299\n                                                                                                                     // 300\n        dualListbox.elements.filterInput2.on('change keyup', function() {                                            // 301\n            filter(dualListbox, 2);                                                                                  // 302\n        });                                                                                                          // 303\n    }                                                                                                                // 304\n                                                                                                                     // 305\n    BootstrapDualListbox.prototype = {                                                                               // 306\n        init: function () {                                                                                          // 307\n            // Add the custom HTML template                                                                          // 308\n            this.container = $('' +                                                                                  // 309\n            '<div class=\"bootstrap-duallistbox-container\">' +                                                        // 310\n            ' <div class=\"box1\">' +                                                                                  // 311\n            '   <label></label>' +                                                                                   // 312\n            '   <span class=\"info-container\">' +                                                                     // 313\n            '     <span class=\"info\"></span>' +                                                                      // 314\n            '     <button type=\"button\" class=\"btn clear1 pull-right\"></button>' +                                   // 315\n            '   </span>' +                                                                                           // 316\n            '   <input class=\"filter\" type=\"text\">' +                                                                // 317\n            '   <div class=\"btn-group buttons\">' +                                                                   // 318\n            '     <button type=\"button\" class=\"btn moveall\">' +                                                      // 319\n            '       <i></i>' +                                                                                       // 320\n            '       <i></i>' +                                                                                       // 321\n            '     </button>' +                                                                                       // 322\n            '     <button type=\"button\" class=\"btn move\">' +                                                         // 323\n            '       <i></i>' +                                                                                       // 324\n            '     </button>' +                                                                                       // 325\n            '   </div>' +                                                                                            // 326\n            '   <select multiple=\"multiple\"></select>' +                                                             // 327\n            ' </div>' +                                                                                              // 328\n            ' <div class=\"box2\">' +                                                                                  // 329\n            '   <label></label>' +                                                                                   // 330\n            '   <span class=\"info-container\">' +                                                                     // 331\n            '     <span class=\"info\"></span>' +                                                                      // 332\n            '     <button type=\"button\" class=\"btn clear2 pull-right\"></button>' +                                   // 333\n            '   </span>' +                                                                                           // 334\n            '   <input class=\"filter\" type=\"text\">' +                                                                // 335\n            '   <div class=\"btn-group buttons\">' +                                                                   // 336\n            '     <button type=\"button\" class=\"btn remove\">' +                                                       // 337\n            '       <i></i>' +                                                                                       // 338\n            '     </button>' +                                                                                       // 339\n            '     <button type=\"button\" class=\"btn removeall\">' +                                                    // 340\n            '       <i></i>' +                                                                                       // 341\n            '       <i></i>' +                                                                                       // 342\n            '     </button>' +                                                                                       // 343\n            '   </div>' +                                                                                            // 344\n            '   <select multiple=\"multiple\"></select>' +                                                             // 345\n            ' </div>' +                                                                                              // 346\n            '</div>')                                                                                                // 347\n                .insertBefore(this.element);                                                                         // 348\n                                                                                                                     // 349\n            // Cache the inner elements                                                                              // 350\n            this.elements = {                                                                                        // 351\n                originalSelect: this.element,                                                                        // 352\n                box1: $('.box1', this.container),                                                                    // 353\n                box2: $('.box2', this.container),                                                                    // 354\n                filterInput1: $('.box1 .filter', this.container),                                                    // 355\n                filterInput2: $('.box2 .filter', this.container),                                                    // 356\n                filterClear1: $('.box1 .clear1', this.container),                                                    // 357\n                filterClear2: $('.box2 .clear2', this.container),                                                    // 358\n                label1: $('.box1 > label', this.container),                                                          // 359\n                label2: $('.box2 > label', this.container),                                                          // 360\n                info1: $('.box1 .info', this.container),                                                             // 361\n                info2: $('.box2 .info', this.container),                                                             // 362\n                select1: $('.box1 select', this.container),                                                          // 363\n                select2: $('.box2 select', this.container),                                                          // 364\n                moveButton: $('.box1 .move', this.container),                                                        // 365\n                removeButton: $('.box2 .remove', this.container),                                                    // 366\n                moveAllButton: $('.box1 .moveall', this.container),                                                  // 367\n                removeAllButton: $('.box2 .removeall', this.container),                                              // 368\n                form: $($('.box1 .filter', this.container)[0].form)                                                  // 369\n            };                                                                                                       // 370\n                                                                                                                     // 371\n            // Set select IDs                                                                                        // 372\n            this.originalSelectName = this.element.attr('name') || '';                                               // 373\n            var select1Id = 'bootstrap-duallistbox-nonselected-list_' + this.originalSelectName,                     // 374\n                select2Id = 'bootstrap-duallistbox-selected-list_' + this.originalSelectName;                        // 375\n            this.elements.select1.attr('id', select1Id);                                                             // 376\n            this.elements.select2.attr('id', select2Id);                                                             // 377\n            this.elements.label1.attr('for', select1Id);                                                             // 378\n            this.elements.label2.attr('for', select2Id);                                                             // 379\n                                                                                                                     // 380\n            // Apply all settings                                                                                    // 381\n            this.selectedElements = 0;                                                                               // 382\n            this.elementCount = 0;                                                                                   // 383\n            this.setBootstrap2Compatible(this.settings.bootstrap2Compatible);                                        // 384\n            this.setFilterTextClear(this.settings.filterTextClear);                                                  // 385\n            this.setFilterPlaceHolder(this.settings.filterPlaceHolder);                                              // 386\n            this.setMoveSelectedLabel(this.settings.moveSelectedLabel);                                              // 387\n            this.setMoveAllLabel(this.settings.moveAllLabel);                                                        // 388\n            this.setRemoveSelectedLabel(this.settings.removeSelectedLabel);                                          // 389\n            this.setRemoveAllLabel(this.settings.removeAllLabel);                                                    // 390\n            this.setMoveOnSelect(this.settings.moveOnSelect);                                                        // 391\n            this.setPreserveSelectionOnMove(this.settings.preserveSelectionOnMove);                                  // 392\n            this.setSelectedListLabel(this.settings.selectedListLabel);                                              // 393\n            this.setNonSelectedListLabel(this.settings.nonSelectedListLabel);                                        // 394\n            this.setHelperSelectNamePostfix(this.settings.helperSelectNamePostfix);                                  // 395\n            this.setSelectOrMinimalHeight(this.settings.selectorMinimalHeight);                                      // 396\n                                                                                                                     // 397\n            updateSelectionStates(this);                                                                             // 398\n                                                                                                                     // 399\n            this.setShowFilterInputs(this.settings.showFilterInputs);                                                // 400\n            this.setNonSelectedFilter(this.settings.nonSelectedFilter);                                              // 401\n            this.setSelectedFilter(this.settings.selectedFilter);                                                    // 402\n            this.setInfoText(this.settings.infoText);                                                                // 403\n            this.setInfoTextFiltered(this.settings.infoTextFiltered);                                                // 404\n            this.setInfoTextEmpty(this.settings.infoTextEmpty);                                                      // 405\n            this.setFilterOnValues(this.settings.filterOnValues);                                                    // 406\n                                                                                                                     // 407\n            // Hide the original select                                                                              // 408\n            this.element.hide();                                                                                     // 409\n                                                                                                                     // 410\n            bindEvents(this);                                                                                        // 411\n            refreshSelects(this);                                                                                    // 412\n                                                                                                                     // 413\n            return this.element;                                                                                     // 414\n        },                                                                                                           // 415\n        setBootstrap2Compatible: function(value, refresh) {                                                          // 416\n            this.settings.bootstrap2Compatible = value;                                                              // 417\n            if (value) {                                                                                             // 418\n                this.container.removeClass('row').addClass('row-fluid bs2compatible');                               // 419\n                this.container.find('.box1, .box2').removeClass('col-md-6').addClass('span6');                       // 420\n                this.container.find('.clear1, .clear2').removeClass('btn-default btn-xs').addClass('btn-mini');      // 421\n                this.container.find('input, select').removeClass('form-control');                                    // 422\n                this.container.find('.btn').removeClass('btn-default');                                              // 423\n                this.container.find('.moveall > i, .move > i').removeClass('glyphicon glyphicon-arrow-right').addClass('icon-arrow-right');\n                this.container.find('.removeall > i, .remove > i').removeClass('glyphicon glyphicon-arrow-left').addClass('icon-arrow-left');\n            } else {                                                                                                 // 426\n                this.container.removeClass('row-fluid bs2compatible').addClass('row');                               // 427\n                this.container.find('.box1, .box2').removeClass('span6').addClass('col-md-6');                       // 428\n                this.container.find('.clear1, .clear2').removeClass('btn-mini').addClass('btn-default btn-xs');      // 429\n                this.container.find('input, select').addClass('form-control');                                       // 430\n                this.container.find('.btn').addClass('btn-default');                                                 // 431\n                this.container.find('.moveall > i, .move > i').removeClass('icon-arrow-right').addClass('glyphicon glyphicon-arrow-right');\n                this.container.find('.removeall > i, .remove > i').removeClass('icon-arrow-left').addClass('glyphicon glyphicon-arrow-left');\n            }                                                                                                        // 434\n            if (refresh) {                                                                                           // 435\n                refreshSelects(this);                                                                                // 436\n            }                                                                                                        // 437\n            return this.element;                                                                                     // 438\n        },                                                                                                           // 439\n        setFilterTextClear: function(value, refresh) {                                                               // 440\n            this.settings.filterTextClear = value;                                                                   // 441\n            this.elements.filterClear1.html(value);                                                                  // 442\n            this.elements.filterClear2.html(value);                                                                  // 443\n            if (refresh) {                                                                                           // 444\n                refreshSelects(this);                                                                                // 445\n            }                                                                                                        // 446\n            return this.element;                                                                                     // 447\n        },                                                                                                           // 448\n        setFilterPlaceHolder: function(value, refresh) {                                                             // 449\n            this.settings.filterPlaceHolder = value;                                                                 // 450\n            this.elements.filterInput1.attr('placeholder', value);                                                   // 451\n            this.elements.filterInput2.attr('placeholder', value);                                                   // 452\n            if (refresh) {                                                                                           // 453\n                refreshSelects(this);                                                                                // 454\n            }                                                                                                        // 455\n            return this.element;                                                                                     // 456\n        },                                                                                                           // 457\n        setMoveSelectedLabel: function(value, refresh) {                                                             // 458\n            this.settings.moveSelectedLabel = value;                                                                 // 459\n            this.elements.moveButton.attr('title', value);                                                           // 460\n            if (refresh) {                                                                                           // 461\n                refreshSelects(this);                                                                                // 462\n            }                                                                                                        // 463\n            return this.element;                                                                                     // 464\n        },                                                                                                           // 465\n        setMoveAllLabel: function(value, refresh) {                                                                  // 466\n            this.settings.moveAllLabel = value;                                                                      // 467\n            this.elements.moveAllButton.attr('title', value);                                                        // 468\n            if (refresh) {                                                                                           // 469\n                refreshSelects(this);                                                                                // 470\n            }                                                                                                        // 471\n            return this.element;                                                                                     // 472\n        },                                                                                                           // 473\n        setRemoveSelectedLabel: function(value, refresh) {                                                           // 474\n            this.settings.removeSelectedLabel = value;                                                               // 475\n            this.elements.removeButton.attr('title', value);                                                         // 476\n            if (refresh) {                                                                                           // 477\n                refreshSelects(this);                                                                                // 478\n            }                                                                                                        // 479\n            return this.element;                                                                                     // 480\n        },                                                                                                           // 481\n        setRemoveAllLabel: function(value, refresh) {                                                                // 482\n            this.settings.removeAllLabel = value;                                                                    // 483\n            this.elements.removeAllButton.attr('title', value);                                                      // 484\n            if (refresh) {                                                                                           // 485\n                refreshSelects(this);                                                                                // 486\n            }                                                                                                        // 487\n            return this.element;                                                                                     // 488\n        },                                                                                                           // 489\n        setMoveOnSelect: function(value, refresh) {                                                                  // 490\n            if (isBuggyAndroid) {                                                                                    // 491\n                value = true;                                                                                        // 492\n            }                                                                                                        // 493\n            this.settings.moveOnSelect = value;                                                                      // 494\n            if (this.settings.moveOnSelect) {                                                                        // 495\n                this.container.addClass('moveonselect');                                                             // 496\n                var self = this;                                                                                     // 497\n                this.elements.select1.on('change', function() {                                                      // 498\n                    move(self);                                                                                      // 499\n                });                                                                                                  // 500\n                this.elements.select2.on('change', function() {                                                      // 501\n                    remove(self);                                                                                    // 502\n                });                                                                                                  // 503\n            } else {                                                                                                 // 504\n                this.container.removeClass('moveonselect');                                                          // 505\n                this.elements.select1.off('change');                                                                 // 506\n                this.elements.select2.off('change');                                                                 // 507\n            }                                                                                                        // 508\n            if (refresh) {                                                                                           // 509\n                refreshSelects(this);                                                                                // 510\n            }                                                                                                        // 511\n            return this.element;                                                                                     // 512\n        },                                                                                                           // 513\n        setPreserveSelectionOnMove: function(value, refresh) {                                                       // 514\n            // We are forcing to move on select and disabling preserveSelectionOnMove on Android                     // 515\n            if (isBuggyAndroid) {                                                                                    // 516\n                value = false;                                                                                       // 517\n            }                                                                                                        // 518\n            this.settings.preserveSelectionOnMove = value;                                                           // 519\n            if (refresh) {                                                                                           // 520\n                refreshSelects(this);                                                                                // 521\n            }                                                                                                        // 522\n            return this.element;                                                                                     // 523\n        },                                                                                                           // 524\n        setSelectedListLabel: function(value, refresh) {                                                             // 525\n            this.settings.selectedListLabel = value;                                                                 // 526\n            if (value) {                                                                                             // 527\n                this.elements.label2.show().html(value);                                                             // 528\n            } else {                                                                                                 // 529\n                this.elements.label2.hide().html(value);                                                             // 530\n            }                                                                                                        // 531\n            if (refresh) {                                                                                           // 532\n                refreshSelects(this);                                                                                // 533\n            }                                                                                                        // 534\n            return this.element;                                                                                     // 535\n        },                                                                                                           // 536\n        setNonSelectedListLabel: function(value, refresh) {                                                          // 537\n            this.settings.nonSelectedListLabel = value;                                                              // 538\n            if (value) {                                                                                             // 539\n                this.elements.label1.show().html(value);                                                             // 540\n            } else {                                                                                                 // 541\n                this.elements.label1.hide().html(value);                                                             // 542\n            }                                                                                                        // 543\n            if (refresh) {                                                                                           // 544\n                refreshSelects(this);                                                                                // 545\n            }                                                                                                        // 546\n            return this.element;                                                                                     // 547\n        },                                                                                                           // 548\n        setHelperSelectNamePostfix: function(value, refresh) {                                                       // 549\n            this.settings.helperSelectNamePostfix = value;                                                           // 550\n            if (value) {                                                                                             // 551\n                this.elements.select1.attr('name', this.originalSelectName + value + '1');                           // 552\n                this.elements.select2.attr('name', this.originalSelectName + value + '2');                           // 553\n            } else {                                                                                                 // 554\n                this.elements.select1.removeAttr('name');                                                            // 555\n                this.elements.select2.removeAttr('name');                                                            // 556\n            }                                                                                                        // 557\n            if (refresh) {                                                                                           // 558\n                refreshSelects(this);                                                                                // 559\n            }                                                                                                        // 560\n            return this.element;                                                                                     // 561\n        },                                                                                                           // 562\n        setSelectOrMinimalHeight: function(value, refresh) {                                                         // 563\n            this.settings.selectorMinimalHeight = value;                                                             // 564\n            var height = this.element.height();                                                                      // 565\n            if (this.element.height() < value) {                                                                     // 566\n                height = value;                                                                                      // 567\n            }                                                                                                        // 568\n            this.elements.select1.height(height);                                                                    // 569\n            this.elements.select2.height(height);                                                                    // 570\n            if (refresh) {                                                                                           // 571\n                refreshSelects(this);                                                                                // 572\n            }                                                                                                        // 573\n            return this.element;                                                                                     // 574\n        },                                                                                                           // 575\n        setShowFilterInputs: function(value, refresh) {                                                              // 576\n            if (!value) {                                                                                            // 577\n                this.setNonSelectedFilter('');                                                                       // 578\n                this.setSelectedFilter('');                                                                          // 579\n                refreshSelects(this);                                                                                // 580\n                this.elements.filterInput1.hide();                                                                   // 581\n                this.elements.filterInput2.hide();                                                                   // 582\n            } else {                                                                                                 // 583\n                this.elements.filterInput1.show();                                                                   // 584\n                this.elements.filterInput2.show();                                                                   // 585\n            }                                                                                                        // 586\n            this.settings.showFilterInputs = value;                                                                  // 587\n            if (refresh) {                                                                                           // 588\n                refreshSelects(this);                                                                                // 589\n            }                                                                                                        // 590\n            return this.element;                                                                                     // 591\n        },                                                                                                           // 592\n        setNonSelectedFilter: function(value, refresh) {                                                             // 593\n            if (this.settings.showFilterInputs) {                                                                    // 594\n                this.settings.nonSelectedFilter = value;                                                             // 595\n                this.elements.filterInput1.val(value);                                                               // 596\n                if (refresh) {                                                                                       // 597\n                    refreshSelects(this);                                                                            // 598\n                }                                                                                                    // 599\n                return this.element;                                                                                 // 600\n            }                                                                                                        // 601\n        },                                                                                                           // 602\n        setSelectedFilter: function(value, refresh) {                                                                // 603\n            if (this.settings.showFilterInputs) {                                                                    // 604\n                this.settings.selectedFilter = value;                                                                // 605\n                this.elements.filterInput2.val(value);                                                               // 606\n                if (refresh) {                                                                                       // 607\n                    refreshSelects(this);                                                                            // 608\n                }                                                                                                    // 609\n                return this.element;                                                                                 // 610\n            }                                                                                                        // 611\n        },                                                                                                           // 612\n        setInfoText: function(value, refresh) {                                                                      // 613\n            this.settings.infoText = value;                                                                          // 614\n            if (refresh) {                                                                                           // 615\n                refreshSelects(this);                                                                                // 616\n            }                                                                                                        // 617\n            return this.element;                                                                                     // 618\n        },                                                                                                           // 619\n        setInfoTextFiltered: function(value, refresh) {                                                              // 620\n            this.settings.infoTextFiltered = value;                                                                  // 621\n            if (refresh) {                                                                                           // 622\n                refreshSelects(this);                                                                                // 623\n            }                                                                                                        // 624\n            return this.element;                                                                                     // 625\n        },                                                                                                           // 626\n        setInfoTextEmpty: function(value, refresh) {                                                                 // 627\n            this.settings.infoTextEmpty = value;                                                                     // 628\n            if (refresh) {                                                                                           // 629\n                refreshSelects(this);                                                                                // 630\n            }                                                                                                        // 631\n            return this.element;                                                                                     // 632\n        },                                                                                                           // 633\n        setFilterOnValues: function(value, refresh) {                                                                // 634\n            this.settings.filterOnValues = value;                                                                    // 635\n            if (refresh) {                                                                                           // 636\n                refreshSelects(this);                                                                                // 637\n            }                                                                                                        // 638\n            return this.element;                                                                                     // 639\n        },                                                                                                           // 640\n        getContainer: function() {                                                                                   // 641\n            return this.container;                                                                                   // 642\n        },                                                                                                           // 643\n        refresh: function(mustClearSelections) {                                                                     // 644\n            updateSelectionStates(this);                                                                             // 645\n                                                                                                                     // 646\n            if (!mustClearSelections) {                                                                              // 647\n                saveSelections(this, 1);                                                                             // 648\n                saveSelections(this, 2);                                                                             // 649\n            } else {                                                                                                 // 650\n                clearSelections(this);                                                                               // 651\n            }                                                                                                        // 652\n                                                                                                                     // 653\n            refreshSelects(this);                                                                                    // 654\n        },                                                                                                           // 655\n        destroy: function() {                                                                                        // 656\n            this.container.remove();                                                                                 // 657\n            this.element.show();                                                                                     // 658\n            $.data(this, 'plugin_' + pluginName, null);                                                              // 659\n            return this.element;                                                                                     // 660\n        }                                                                                                            // 661\n    };                                                                                                               // 662\n                                                                                                                     // 663\n    // A really lightweight plugin wrapper around the constructor,                                                   // 664\n    // preventing against multiple instantiations                                                                    // 665\n    $.fn[ pluginName ] = function (options) {                                                                        // 666\n        var args = arguments;                                                                                        // 667\n                                                                                                                     // 668\n        // Is the first parameter an object (options), or was omitted, instantiate a new instance of the plugin.     // 669\n        if (options === undefined || typeof options === 'object') {                                                  // 670\n            return this.each(function () {                                                                           // 671\n                // If this is not a select                                                                           // 672\n                if (!$(this).is('select')) {                                                                         // 673\n                    $(this).find('select').each(function(index, item) {                                              // 674\n                        // For each nested select, instantiate the Dual List Box                                     // 675\n                        $(item).bootstrapDualListbox(options);                                                       // 676\n                    });                                                                                              // 677\n                } else if (!$.data(this, 'plugin_' + pluginName)) {                                                  // 678\n                    // Only allow the plugin to be instantiated once so we check that the element has no plugin instantiation yet\n                                                                                                                     // 680\n                    // if it has no instance, create a new one, pass options to our plugin constructor,              // 681\n                    // and store the plugin instance in the elements jQuery data object.                             // 682\n                    $.data(this, 'plugin_' + pluginName, new BootstrapDualListbox(this, options));                   // 683\n                }                                                                                                    // 684\n            });                                                                                                      // 685\n            // If the first parameter is a string and it doesn't start with an underscore or \"contains\" the `init`-function,\n            // treat this as a call to a public method.                                                              // 687\n        } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {                        // 688\n                                                                                                                     // 689\n            // Cache the method call to make it possible to return a value                                           // 690\n            var returns;                                                                                             // 691\n                                                                                                                     // 692\n            this.each(function () {                                                                                  // 693\n                var instance = $.data(this, 'plugin_' + pluginName);                                                 // 694\n                // Tests that there's already a plugin-instance and checks that the requested public method exists   // 695\n                if (instance instanceof BootstrapDualListbox && typeof instance[options] === 'function') {           // 696\n                    // Call the method of our plugin instance, and pass it the supplied arguments.                   // 697\n                    returns = instance[options].apply(instance, Array.prototype.slice.call(args, 1));                // 698\n                }                                                                                                    // 699\n            });                                                                                                      // 700\n                                                                                                                     // 701\n            // If the earlier cached method gives a value back return the value,                                     // 702\n            // otherwise return this to preserve chainability.                                                       // 703\n            return returns !== undefined ? returns : this;                                                           // 704\n        }                                                                                                            // 705\n                                                                                                                     // 706\n    };                                                                                                               // 707\n                                                                                                                     // 708\n})(jQuery, window, document);                                                                                        // 709\n                                                                                                                     // 710\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]